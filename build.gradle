apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'java-library-distribution'
apply plugin: 'findbugs'
apply plugin: 'maven-publish'
apply plugin: 'signing'

sourceCompatibility = 1.8

group = 'de.lyca.xslt'
version = '0.9.5'

//jar {
//    manifest {
//        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
//    }
//}

repositories {
    mavenCentral()
}

configurations {
  lexer
}

dependencies {
    compile 'xerces:xercesImpl:2.12.0'
    compile 'edu.princeton.cup:java-cup:10k'
    compile 'com.sun.codemodel:codemodel:2.6'
    testCompile 'junit:junit:4.12'
    lexer files('tools/JLex.jar')
}

test {
  //  systemProperties 'javax.xml.transform.TransformerFactory': 'com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl'
  //  systemProperties 'javax.xml.transform.TransformerFactory': 'de.lyca.xalan.xsltc.trax.TransformerFactoryImpl'
    ignoreFailures=true
    jacoco {
        excludes += [
            "**/de.lyca.xalan.res/**",
            "**/de.lyca.xml.res/**",
            "**/de.lyca.xml.utils.res/**",
            "**/de.lyca.xpath.res/**"
        ]
    }
}

task(createXPathParser, type: JavaExec) {
    inputs.file "$projectDir/src/main/java/de/lyca/xalan/xsltc/compiler/xpath.cup"
    outputs.files "$projectDir/src/main/java/de/lyca/xalan/xsltc/compiler/XPathParser.java",
                  "$projectDir/src/main/java/de/lyca/xalan/xsltc/compiler/sym.java"
    main = 'java_cup.Main'
    args = ['-parser', 'XPathParser', '-package', 'de.lyca.xalan.xsltc.compiler', 'xpath.cup'].toList()
    classpath project.configurations.compile
    workingDir file("$projectDir/src/main/java/de/lyca/xalan/xsltc/compiler/")
} 

task(createXPathLexer, dependsOn:createXPathParser, type: JavaExec) {
    inputs.file "$projectDir/src/main/java/de/lyca/xalan/xsltc/compiler/xpath.lex"
    outputs.file "$projectDir/src/main/java/de/lyca/xalan/xsltc/compiler/XPathLexer.java"
    main = 'JLex.Main'
    args = ['-static', 'xpath.lex'].toList()
    classpath project.configurations.lexer project.configurations.compile
    workingDir file("$projectDir/src/main/java/de/lyca/xalan/xsltc/compiler/")
    doLast{
      ant.move(file:"$projectDir/src/main/java/de/lyca/xalan/xsltc/compiler/xpath.lex.java",
        toFile:"$projectDir/src/main/java/de/lyca/xalan/xsltc/compiler/XPathLexer.java")
    }
} 

compileJava.dependsOn createXPathLexer

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

jacoco {
    toolVersion = "0.8.1"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                exclude: [
                    '**/de/lyca/xalan/res/**',
                    '**/de/lyca/xml/res/**',
                    '**/de/lyca/xml/utils/res/**',
                    '**/de/lyca/xpath/res/**'
                ])
        })
    }
}

findbugs {
    ignoreFailures = true
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

publishing {
    repositories {
        maven {
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
            url version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username "$sonatypeUser"
                password "$sonatypePassword"
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            pom {
                name = 'lyca-xslt'
                description = 'A major rewrite of Apache Xalan Java XSLT processor'
                url = 'https://github.com/lyca/lyca-xslt'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'lyca'
                        name = 'Lars Michele'
                        email = 'lars.michele@tu-dortmund.de'
                        organization = 'n.A.'
                        organizationUrl = 'https://github.com/lyca'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/lyca/lyca-xslt.git'
                    developerConnection = 'scm:git:ssh://github.com/lyca/lyca-xslt.git'
                    url = 'https://github.com/lyca/lyca-xslt'
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
