multipleStylesheetErr = \uD558\uB098 \uC774\uC0C1\uC758 \uC2A4\uD0C0\uC77C\uC2DC\uD2B8\uAC00 \uB3D9\uC77C\uD55C \uD30C\uC77C\uC5D0\uC11C \uC815\uC758\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

# Note to translators: The substitution text is the name of a template. The same name was used on two different
# templates in the same stylesheet.
templateRedefErr = ''{0}'' \uD15C\uD50C\uB9AC\uD2B8\uAC00 \uC774\uBBF8 \uC774 \uC2A4\uD0C0\uC77C\uC2DC\uD2B8\uC5D0\uC11C \uC815\uC758\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

# Note to translators: The substitution text is the name of a template. A reference to the template name was
# encountered, but the template is undefined.
templateUndefErr = ''{0}'' \uD15C\uD50C\uB9AC\uD2B8\uAC00 \uC774 \uC2A4\uD0C0\uC77C\uC2DC\uD2B8\uC5D0\uC11C \uC815\uC758\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.

# Note to translators: The substitution text is the name of a variable that was defined more than once.
variableRedefErr = ''{0}'' \uBCC0\uC218\uAC00 \uB3D9\uC77C\uD55C \uBC94\uC704 \uC548\uC5D0\uC11C \uC5EC\uB7EC \uBC88 \uC815\uC758\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

# Note to translators: The substitution text is the name of a variable or parameter. A reference to the variable or
# parameter was found, but it was never defined.
variableUndefErr = ''{0}'' \uB9E4\uAC1C\uBCC0\uC218 \uB610\uB294 \uBCC0\uC218\uAC00 \uC815\uC758\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.

# Note to translators: The word "class" here refers to a Java class. Processing the stylesheet required a class to be
# loaded, but it could not be found. The substitution text is the name of the class.
classNotFoundErr = ''{0}'' \uD074\uB798\uC2A4\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: The word "method" here refers to a Java method. Processing the stylesheet required a reference
# to the method named by the substitution text, but it could not be found. "public" is the Java keyword.
methodNotFoundErr = ''{0}'' \uC678\uBD80 \uBA54\uC18C\uB4DC\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. (public\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4.)

# Note to translators: The word "method" here refers to a Java method. Processing the stylesheet required a reference
# to the method named by the substitution text, but no method with the required types of arguments or return type could
# be found.
argumentConversionErr = ''{0}'' \uBA54\uC18C\uB4DC\uB85C\uC758 \uD638\uCD9C\uC5D0\uC11C \uC778\uC218/\uB9AC\uD134 \uC720\uD615\uC744 \uBCC0\uD658\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: The file or URI named in the substitution text is missing.
fileNotFoundErr = ''{0}'' URI \uB610\uB294 \uD30C\uC77C\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: This message is displayed when the URI mentioned in the substitution text is not well-formed
# syntactically.
invalidUriErr = ''{0}'' URI\uAC00 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# Note to translators: The file or URI named in the substitution text exists but could not be opened.
fileAccessErr = ''{0}'' URI \uB610\uB294 \uD30C\uC77C\uC744 \uC5F4 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: <xsl:stylesheet> and <xsl:transform> are keywords that should not be translated.
missingRootErr = <xsl\:stylesheet> \uB610\uB294 <xsl\:transform> \uC694\uC18C\uAC00 \uC608\uC0C1\uB429\uB2C8\uB2E4.

# Note to translators: The stylesheet contained a reference to a namespace prefix that was undefined. The value of the
# substitution text is the name of the prefix.
namespaceUndefErr = ''{0}'' \uC774\uB984 \uACF5\uAC04 \uC811\uB450\uBD80\uAC00 \uC120\uC5B8\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.

# Note to translators: The Java function named in the stylesheet could not be found.
functionResolveErr = ''{0}'' \uD568\uC218\uC5D0 \uB300\uD55C \uD638\uCD9C\uC744 \uBD84\uC11D\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: The substitution text is the name of a function. A literal string here means a constant string
# value.
needLiteralErr = ''{0}''\uC5D0 \uB300\uD55C \uC778\uC218\uB294 \uB9AC\uD130\uB7F4 \uBB38\uC790\uC5F4\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4.

# Note to translators: This message indicates there was a syntactic error in the form of an XPath expression. The
# substitution text is the expression.
xpathParserErr = ''{0}'' XPath \uD45C\uD604\uC2DD \uAD6C\uBB38 \uBD84\uC11D \uC911\uC5D0 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

# Note to translators: An element in the stylesheet requires a particular attribute named by the substitution text, but
# that attribute was not specified in the stylesheet.
requiredAttrErr = ''{0}'' \uD544\uC218 \uC18D\uC131\uC774 \uB204\uB77D\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

# Note to translators: This message indicates that a character not permitted in an XPath expression was encountered.
# The substitution text is the offending character.
illegalCharErr = XPath \uD45C\uD604\uC2DD\uC758 ''{0}'' \uBB38\uC790\uAC00 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# Note to translators: A processing instruction is a mark-up item in an XML document that request some behaviour of an
# XML processor. The form of the name of was invalid in this case, and the substitution text is the name.
illegalPiErr = \uCC98\uB9AC \uBA85\uB839\uC5B4\uC5D0 \uB300\uD55C ''{0}'' \uC774\uB984\uC774 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# Note to translators: This message is reported if the stylesheet being processed attempted to construct an XML document
# with an attribute in a place other than on an element. The substitution text specifies the name of the attribute.
strayAttributeErr = ''{0}'' \uC18D\uC131\uC774 \uC694\uC18C\uC758 \uC678\uBD80\uC5D0 \uC788\uC2B5\uB2C8\uB2E4.

# Note to translators: An attribute that wasn't recognized was specified on an element in the stylesheet. The attribute
# is named by the substitution text.
illegalAttributeErr = ''{0}'' \uC18D\uC131\uC774 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# Note to translators: "import" and "include" are keywords that should not be translated. This messages indicates that
# the stylesheet named in the substitution text imported or included itself either directly or indirectly.
circularIncludeErr = import/include\uAC00 \uC21C\uD658\uB429\uB2C8\uB2E4. ''{0}'' \uC2A4\uD0C0\uC77C\uC2DC\uD2B8\uAC00 \uC774\uBBF8 \uB85C\uB4DC\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

# Note to translators: A result-tree fragment is a portion of a resulting XML document represented as a tree.
# "<xsl:sort>" is a keyword and should not be translated.
resultTreeSortErr = \uACB0\uACFC \uD2B8\uB9AC \uB2E8\uD3B8\uC744 \uC815\uB82C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. (<xsl\:sort> \uC694\uC18C\uAC00 \uBB34\uC2DC\uB429\uB2C8\uB2E4.) \uACB0\uACFC \uD2B8\uB9AC\uB97C \uC791\uC131\uD560 \uB54C \uB178\uB4DC\uB97C \uC815\uB82C\uD574\uC57C \uD569\uB2C8\uB2E4.

# Note to translators: A name can be given to a particular style to be used to format decimal values. The substitution
# text gives the name of such a style for which more than one declaration was encountered.
symbolsRedefErr = ''{0}'' 10\uC9C4\uC218 \uD3EC\uB9F7\uD305\uC774 \uC774\uBBF8 \uC815\uC758\uB418\uC5B4 \uC788\uC2B5\uB2C8\uB2E4.

# Note to translators: The stylesheet version named in the substitution text is not supported.
xslVersionErr = XSLTC\uC5D0\uC11C ''{0}'' XSL \uBC84\uC804\uC744 \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# Note to translators: The definitions of one or more variables or parameters depend on one another.
circularVariableErr = ''{0}''\uC5D0\uC11C \uBCC0\uC218/\uB9E4\uAC1C\uBCC0\uC218 \uCC38\uC870\uAC00 \uC21C\uD658\uB429\uB2C8\uB2E4.

# Note to translators: The operator in an expresion with two operands was not recognized.
illegalBinaryOpErr = 2\uC9C4 \uD45C\uD604\uC2DD\uC5D0 \uB300\uD55C \uC5F0\uC0B0\uC790\uB97C \uC54C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: This message is produced if a reference to a function has too many or too few arguments.
illegalArgErr = \uD568\uC218 \uD638\uCD9C\uC5D0 \uB300\uD55C \uC778\uC218\uAC00 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# Note to translators: "document()" is the name of function and must not be translated. A node-set is a set of the nodes
# in the tree representation of an XML document.
documentArgErr = document() \uD568\uC218\uC5D0 \uB300\uD55C \uB450 \uBC88\uC9F8 \uC778\uC218\uB294 node-set\uC5EC\uC57C \uD569\uB2C8\uB2E4.

# Note to translators: "<xsl:when>" and "<xsl:choose>" are keywords and should not be translated. This message describes
# a syntax error in the stylesheet.
missingWhenErr = <xsl\:choose>\uC5D0 \uCD5C\uC18C \uD558\uB098\uC758 <xsl\:when> \uC694\uC18C\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.

# Note to translators: "<xsl:otherwise>" and "<xsl:choose>" are keywords and should not be translated. This message
# describes a syntax error in the stylesheet.
multipleOtherwiseErr = <xsl\:choose>\uC5D0 \uD558\uB098\uC758 <xsl\:otherwise> \uC694\uC18C\uB9CC\uC774 \uD5C8\uC6A9\uB429\uB2C8\uB2E4.

# Note to translators: "<xsl:otherwise>" and "<xsl:choose>" are keywords and should not be translated. This message
# describes a syntax error in the stylesheet.
strayOtherwiseErr = <xsl\:otherwise>\uB294 <xsl\:choose>\uC5D0\uC11C\uB9CC \uC0AC\uC6A9\uB420 \uC218 \uC788\uC2B5\uB2C8\uB2E4.

# Note to translators: "<xsl:when>" and "<xsl:choose>" are keywords and should not be translated. This message describes
# a syntax error in the stylesheet.
strayWhenErr = <xsl\:when>\uC740 <xsl\:choose>\uC5D0\uC11C\uB9CC \uC0AC\uC6A9\uB420 \uC218 \uC788\uC2B5\uB2C8\uB2E4.

# Note to translators: "<xsl:when>", "<xsl:otherwise>" and "<xsl:choose>" are keywords and should not be translated.
# This message describes a syntax error in the stylesheet.
whenElementErr = <xsl\:when> \uBC0F <xsl\:otherwise> \uC694\uC18C\uB9CC\uC774 <xsl\:choose>\uC5D0\uC11C \uD5C8\uC6A9\uB429\uB2C8\uB2E4.

# Note to translators: "<xsl:attribute-set>" and "name" are keywords that should not be translated.
unnamedAttribsetErr = <xsl\:attribute-set>\uC774 'name' \uC18D\uC131\uC5D0\uC11C \uB204\uB77D\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

# Note to translators: An element in the stylesheet contained an element of a type that it was not permitted to contain.
illegalChildErr = \uD558\uC704 \uC694\uC18C\uAC00 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# Note to translators: The stylesheet tried to create an element with a name that was not a valid XML name. The
# substitution text contains the name.
illegalElemNameErr = ''{0}'' \uC694\uC18C\uB97C \uD638\uCD9C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: The stylesheet tried to create an attribute with a name that was not a valid XML name. The
# substitution text contains the name.
illegalAttrNameErr = ''{0}'' \uC18D\uC131\uC744 \uD638\uCD9C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: The children of the outermost element of a stylesheet are referred to as top-level elements. No
# text should occur within that outermost element unless it is within a top-level element. This message indicates that
# that constraint was violated. "<xsl:stylesheet>" is a keyword that should not be translated.
illegalTextNodeErr = \uD14D\uC2A4\uD2B8 \uB370\uC774\uD130\uAC00 \uCD5C\uC0C1\uC704 \uB808\uBCA8 <xsl\:stylesheet> \uC694\uC18C\uC758 \uC678\uBD80\uC5D0 \uC788\uC2B5\uB2C8\uB2E4.

# Note to translators: JAXP is an acronym for the Java API for XML Processing. This message indicates that the XML
# parser provided to XSLTC to process the XML input document had a configuration problem.
saxParserConfigErr = JAXP \uAD6C\uBB38 \uBD84\uC11D\uAE30\uAC00 \uC81C\uB300\uB85C \uAD6C\uC131\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.

# Note to translators: The substitution text names the internal error encountered.
internalErr = \uBCF5\uAD6C\uD560 \uC218 \uC5C6\uB294 XSLTC-\uB0B4\uBD80 \uC624\uB958\: ''{0}''

# Note to translators: The stylesheet contained an element that was not recognized as part of the XSL syntax. The
# substitution text gives the element name.
unsupportedXslErr = ''{0}'' XSL \uC694\uC18C\uAC00 \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# Note to translators: The stylesheet referred to an extension to the XSL syntax and indicated that it was defined by
# XSLTC, but XSTLC does not recognized the particular extension named. The substitution text gives the extension name.
unsupportedExtErr = ''{0}'' XSLTC \uD655\uC7A5\uC790\uB97C \uC778\uC2DD\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: The XML document given to XSLTC as a stylesheet was not, in fact, a stylesheet. XSLTC is able to
# detect that in this case because the outermost element in the stylesheet has to be declared with respect to the XSL
# namespace URI, but no declaration for that namespace was seen.
missingXsltUriErr = \uC785\uB825 \uBB38\uC11C\uB294 \uC2A4\uD0C0\uC77C\uC2DC\uD2B8\uAC00 \uC544\uB2D9\uB2C8\uB2E4. (XSL \uC774\uB984 \uACF5\uAC04\uC774 \uB8E8\uD2B8 \uC694\uC18C\uC5D0\uC11C \uC120\uC5B8\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.)

# Note to translators: XSLTC could not find the stylesheet document with the name specified by the substitution text.
missingXsltTargetErr = ''{0}'' \uC2A4\uD0C0\uC77C\uC2DC\uD2B8 \uB300\uC0C1\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: This message represents an internal error in condition in XSLTC. The substitution text is the
# class name in XSLTC that is missing some functionality.
notImplementedErr = \uAD6C\uD604\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4\: ''{0}''

# Note to translators: The XML document given to XSLTC as a stylesheet was not, in fact, a stylesheet.
notStylesheetErr = \uC785\uB825 \uBB38\uC11C\uC5D0 XSL \uC2A4\uD0C0\uC77C\uC2DC\uD2B8\uAC00 \uD3EC\uD568\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.

# Note to translators: The element named in the substitution text was encountered in the stylesheet but is not
# recognized.
elementParseErr = ''{0}'' \uC694\uC18C\uB97C \uAD6C\uBB38 \uBD84\uC11D\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: "use", "<key>", "node", "node-set", "string" and "number" are keywords in this context and should
# not be translated. This message indicates that the value of the "use" attribute was not one of the permitted values.
keyUseAttrErr = <key>\uC758 use \uC18D\uC131\uC740 node, node-set, string \uB610\uB294 number\uC5EC\uC57C \uD569\uB2C8\uB2E4.

# Note to translators: An XML document can specify the version of the XML specification to which it adheres. This
# message indicates that the version specified for the output document was not valid.
outputVersionErr = \uCD9C\uB825 XML \uBB38\uC11C \uBC84\uC804\uC740 1.0\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4.

# Note to translators: The operator in a comparison operation was not recognized.
illegalRelatOpErr = \uAD00\uACC4\uC2DD\uC5D0 \uB300\uD55C \uC5F0\uC0B0\uC790\uB97C \uC54C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: An attribute set defines as a set of XML attributes that can be added to an element in the output
# XML document as a group. This message is reported if the name specified was not used to declare an attribute set. The
# substitution text is the name that is in error.
attribsetUndefErr = \uC874\uC7AC\uD558\uC9C0 \uC54A\uB294 \uC18D\uC131 \uC138\uD2B8 ''{0}'' \uC0AC\uC6A9\uC744 \uC2DC\uB3C4 \uC911\uC785\uB2C8\uB2E4.

# Note to translators: The term "attribute value template" is a term defined by XSLT which describes the value of an
# attribute that is determined by an XPath expression. The message indicates that the expression was syntactically
# incorrect; the substitution text contains the expression that was in error.
attrValTemplateErr = ''{0}'' \uC18D\uC131\uAC12 \uD15C\uD50C\uB9AC\uD2B8\uB97C \uAD6C\uBB38 \uBD84\uC11D\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: ???
unknownSigTypeErr = ''{0}'' \uD074\uB798\uC2A4\uC5D0 \uB300\uD55C \uC11C\uBA85\uC5D0 \uC54C \uC218 \uC5C6\uB294 \uB370\uC774\uD130 \uC720\uD615\uC774 \uC788\uC2B5\uB2C8\uB2E4.

# Note to translators: The substitution text refers to data types. The message is displayed if a value in a particular
# context needs to be converted to type {1}, but that's not possible for a value of type {0}.
dataConversionErr = \uB370\uC774\uD130 \uC720\uD615\uC744 ''{0}''\uC5D0\uC11C ''{1}''(\uC73C)\uB85C \uBCC0\uD658\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: "Templates" is a Java class name that should not be translated.
noTransletClassErr = \uC774 Templates\uC5D0\uB294 \uC720\uD6A8\uD55C translet \uD074\uB798\uC2A4 \uC815\uC758\uAC00 \uD3EC\uD568\uB418\uC5B4 \uC788\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# Note to translators: "Templates" is a Java class name that should not be translated.
noMainTransletErr = \uC774 Templates\uC5D0\uB294 ''{0}'' \uC774\uB984\uC778 \uD074\uB798\uC2A4\uAC00 \uD3EC\uD568\uB418\uC5B4 \uC788\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# Note to translators: The substitution text is the name of a class.
transletClassErr = ''{0}'' translet \uD074\uB798\uC2A4\uB97C \uB85C\uB4DC\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

transletObjectErr = translet \uD074\uB798\uC2A4\uAC00 \uB85C\uB4DC\uB418\uC5C8\uC9C0\uB9CC translet \uC778\uC2A4\uD134\uC2A4\uB97C \uC791\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: "ErrorListener" is a Java interface name that should not be translated. The message indicates
# that the user tried to set an ErrorListener object on object of the class named in the substitution text with "null"
# Java value.
errorListenerNullErr = ''{0}''\uC5D0 \uB300\uD55C ErrorListener\uB97C \uB110(null)\uB85C \uC124\uC815\uD558\uB824\uACE0 \uD569\uB2C8\uB2E4.

# Note to translators: StreamSource, SAXSource and DOMSource are Java interface names that should not be translated.
jaxpUnknownSourceErr = XSLTC\uC5D0\uC11C StreamSource, SAXSource \uBC0F DOMSource\uB9CC\uC744 \uC9C0\uC6D0\uD569\uB2C8\uB2E4.

# Note to translators: "Source" is a Java class name that should not be translated. The substitution text is the name of
# Java method.
jaxpNoSourceErr = ''{0}''(\uC73C)\uB85C \uD328\uC2A4\uB41C Source \uC624\uBE0C\uC81D\uD2B8\uC5D0 \uCEE8\uD150\uCE20\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: The message indicates that XSLTC failed to compile the stylesheet into a translet (class file).
jaxpCompileErr = \uC2A4\uD0C0\uC77C\uC2DC\uD2B8\uB97C \uCEF4\uD30C\uC77C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: "TransformerFactory" is a class name. In this context, an attribute is a property or setting of
# the TransformerFactory object. The substitution text is the name of the unrecognised attribute. The method used to
# retrieve the attribute is "getAttribute", so it's not clear whether it would be best to translate the term
# "attribute".
jaxpInvalidAttrErr = TransformerFactory ''{0}'' \uC18D\uC131\uC744 \uC778\uC2DD\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: "setResult()" and "startDocument()" are Java method names that should not be translated.
jaxpSetResultErr = setResult()\uB294 startDocument()\uBCF4\uB2E4 \uBA3C\uC800 \uD638\uCD9C\uB418\uC5B4\uC57C \uD569\uB2C8\uB2E4.

# Note to translators: "Transformer" is a Java interface name that should not be translated. A Transformer object should
# contained a reference to a translet object in order to be used for transformations; this message is produced if that
# requirement is not met.
jaxpNoTransletErr = Transformer\uC5D0 \uC694\uC57D\uB41C translet \uC624\uBE0C\uC81D\uD2B8\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: The XML document that results from a transformation needs to be sent to an output handler object;
# this message is produced if that requirement is not met.
jaxpNoHandlerErr = \uBCC0\uD658 \uACB0\uACFC\uC5D0 \uB300\uD55C \uCD9C\uB825 \uD578\uB4E4\uB7EC\uAC00 \uC815\uC758\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.

# Note to translators: "Result" is a Java interface name in this context. The substitution text is a method name.
jaxpNoResultErr = ''{0}''(\uC73C)\uB85C \uD328\uC2A4\uB41C Result \uC624\uBE0C\uC81D\uD2B8\uAC00 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# Note to translators: "Transformer" is a Java interface name. The user's program attempted to access an unrecognized
# property with the name specified in the substitution text. The method used to retrieve the property is
# "getOutputProperty", so it's not clear whether it would be best to translate the term "property".
jaxpUnknownPropErr = ''{0}'' \uC798\uBABB\uB41C Transformer \uD2B9\uC131\uC5D0 \uC561\uC138\uC2A4\uD558\uB824\uACE0 \uD569\uB2C8\uB2E4.

# Note to translators: SAX2DOM is the name of a Java class that should not be translated. This is an adapter in the
# sense that it takes a DOM object and converts it to something that uses the SAX API.
sax2domAdapterErr = SAX2DOM ''{0}'' \uC5B4\uB311\uD130\uB97C \uC791\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: "XSLTCSource.build()" is a Java method name. "systemId" is an XML term that is short for "system
# identification".
xsltcSourceErr = XSLTCSource.build()\uAC00 \uC124\uC815\uB41C \uC2DC\uC2A4\uD15C ID \uC5C6\uC774 \uD638\uCD9C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

erResultNull = \uACB0\uACFC\uB294 \uB110(null)\uC774 \uB420 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: This message indicates that the value argument of setParameter must be a valid Java Object.
jaxpInvalidSetParamValue = {0} \uB9E4\uAC1C\uBCC0\uC218 \uAC12\uC740 \uC720\uD6A8\uD55C Java \uC624\uBE0C\uC81D\uD2B8\uC5EC\uC57C \uD569\uB2C8\uB2E4.

compileStdinErr = -i \uC635\uC158\uC740 -o \uC635\uC158\uACFC \uD568\uAED8 \uC0AC\uC6A9\uB418\uC5B4\uC57C \uD569\uB2C8\uB2E4.

# Note to translators: This message contains usage information for a means of invoking XSLTC from the command-line. The
# message is formatted for presentation in English. The strings <output>, <directory>, etc. indicate user-specified
# argument values, and can be translated - the argument <package> refers to a Java package, so it should be handled in
# the same way the term is handled for JDK documentation.
compileUsageStr = SYNOPSIS\n java de.lyca.xalan.xsltc.cmdline.Compile [-o <output>]\n [-d <directory>] [-j <jarfile>] [-p <package>]\n [-n] [-x] [-u] [-v] [-h] { <stylesheet> | -i }\n\n \uC635\uC158\n -o <output>    \uC0DD\uC131\uB41C Translet\uC5D0 <output> \uC774\uB984\uC744 \uC9C0\uC815\uD569\uB2C8\uB2E4. \n                \uAE30\uBCF8\uC801\uC73C\uB85C Translet \uC774\uB984\uC744 <stylesheet> \uC774\uB984\uC5D0\uC11C\n \uAC00\uC838\uC635\uB2C8\uB2E4. \uC774 \uC635\uC158\uC740 \uC5EC\uB7EC \uAC1C\uC758 \uC2A4\uD0C0\uC77C\uC2DC\uD2B8\uB97C \n \uCEF4\uD30C\uC77C\uD560 \uACBD\uC6B0 \uBB34\uC2DC\uB429\uB2C8\uB2E4.\n -d <directory> Translet\uC758 \uB300\uC0C1 \uB514\uB809\uD1A0\uB9AC\uB97C \uC9C0\uC815\uD569\uB2C8\uB2E4.\n -j <jarfile>   <jarfile>\uB85C \uC9C0\uC815\uB41C jar \uD30C\uC77C \uC774\uB984\uC73C\uB85C\n Translet \uD074\uB798\uC2A4\uB97C \uD328\uD0A4\uC9C0\uD569\uB2C8\uB2E4.\n -p <package>   \uC0DD\uC131\uB41C \uBAA8\uB4E0 Translet \uD074\uB798\uC2A4\uC5D0 \uB300\uD574 \uD328\uD0A4\uC9C0 \uC774\uB984 \uC811\uB450\uBD80\uB97C\n \uC9C0\uC815\uD569\uB2C8\uB2E4.\n -n             \uD15C\uD50C\uB9AC\uD2B8 \uC778\uB77C\uC774\uB2DD(\uD3C9\uADE0\uBCF4\uB2E4 \uC6B0\uC218\uD55C)\uC744\n \uC0AC\uC6A9 \uAC00\uB2A5\uD558\uAC8C \uD569\uB2C8\uB2E4.\n -x             \uCD94\uAC00 \uB514\uBC84\uAE45 \uBA54\uC2DC\uC9C0 \uCD9C\uB825\uC744 \uC2DC\uC791\uD569\uB2C8\uB2E4.\n -u             <stylesheet> \uC778\uC218\uB97C URL\uB85C \uD574\uC11D\uD569\uB2C8\uB2E4.\n -i             stdin\uC73C\uB85C\uBD80\uD130 \uC2A4\uD0C0\uC77C\uC2DC\uD2B8\uB97C \uC77D\uB3C4\uB85D \uCEF4\uD30C\uC77C\uB7EC\uB97C \uAC15\uC81C \uC2E4\uD589\uD569\uB2C8\uB2E4.\n -v             \uCEF4\uD30C\uC77C\uB7EC \uBC84\uC804\uC744 \uC778\uC1C4\uD569\uB2C8\uB2E4.\n -h             \uC0AC\uC6A9\uBC95 \uBA85\uB839\uBB38\uC744 \uC778\uC1C4\uD569\uB2C8\uB2E4.\n

# Note to translators: This message contains usage information for a means of invoking XSLTC from the command-line. The
# message is formatted for presentation in English. The strings <jarfile>, <document>, etc. indicate user-specified
# argument values, and can be translated - the argument <class> refers to a Java class, so it should be handled in the
# same way the term is handled for JDK documentation.
transformUsageStr = SYNOPSIS \n java de.lyca.xalan.xsltc.cmdline.Transform [-j <jarfile>]\n [-x] [-n <iterations>] {-u <document_url> | <document>}\n <class> [<param1>\=<value1> ...]\n\n Translet <class>\uB97C \uC0AC\uC6A9\uD558\uC5EC <document>\uB85C \uC9C0\uC815\uB41C XML \uBB38\uC11C\uB97C \n \uBCC0\uD658\uD569\uB2C8\uB2E4. Translet <class>\uB294 \uC0AC\uC6A9\uC790\uC758 CLASSPATH \uB610\uB294\n \uC120\uD0DD\uC801\uC73C\uB85C \uC9C0\uC815\uB41C <jarfile> \uB0B4\uC5D0 \uC788\uC2B5\uB2C8\uB2E4.\n\uC635\uC158\n -j <jarfile>      Translet\uC744 \uB85C\uB4DC\uD574\uC62C jarfile\uC744 \uC9C0\uC815\uD569\uB2C8\uB2E4.\n -x                \uCD94\uAC00 \uB514\uBC84\uAE45 \uBA54\uC2DC\uC9C0 \uCD9C\uB825\uC744 \uC2DC\uC791\uD569\uB2C8\uB2E4.\n -n <iterations>   <iterations> \uCC28\uB840 \uBCC0\uD658\uC744 \uC2E4\uD589\uD558\uBA70\n \uD504\uB85C\uD30C\uC77C\uB9C1 \uC815\uBCF4\uB97C \uD45C\uC2DC\uD569\uB2C8\uB2E4.\n -u <document_url> XML \uC785\uB825 \uBB38\uC11C\uB97C URL\uB85C \uC9C0\uC815\uD569\uB2C8\uB2E4.\n

# Note to translators: "<xsl:sort>", "<xsl:for-each>" and "<xsl:apply-templates>" are keywords that should not be
# translated. The message indicates that an xsl:sort element must be a child of one of the other kinds of elements
# mentioned.
straySortErr = <xsl\:sort>\uB294 <xsl\:for-each> \uB610\uB294 <xsl\:apply-templates>\uC5D0\uC11C\uB9CC \uC0AC\uC6A9\uB420 \uC218 \uC788\uC2B5\uB2C8\uB2E4.

# Note to translators: The message indicates that the encoding requested for the output document was on that requires
# support that is not available from the Java Virtual Machine being used to execute the program.
unsupportedEncoding = \uC774 JVM\uC5D0\uC11C ''{0}'' \uCD9C\uB825 \uC778\uCF54\uB529\uC744 \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# Note to translators: The message indicates that the XPath expression named in the substitution text was not well
# formed syntactically.
syntaxErr = ''{0}''\uC5D0 \uAD6C\uBB38 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4.

# Note to translators: The substitution text is the name of a Java class. The term "constructor" here is the Java term.
# The message is displayed if XSLTC could not find a constructor for the specified class.
constructorNotFound = ''{0}'' \uC678\uBD80 \uAD6C\uC131\uC790\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: "static" is the Java keyword. The substitution text is the name of a function. The first argument
# of that function is not of the required type.
noJavaFunctThisRef = non-static Java \uD568\uC218 ''{0}''\uC758 \uCCAB \uBC88\uC9F8 \uC778\uC218\uAC00 \uC720\uD6A8\uD55C \uC624\uBE0C\uC81D\uD2B8 \uCC38\uC870\uAC00 \uC544\uB2D9\uB2C8\uB2E4.

# Note to translators: An XPath expression was not of the type required in a particular context. The substitution text
# is the expression that was in error.
typeCheckErr = ''{0}'' \uD45C\uD604\uC2DD\uC758 \uC720\uD615\uC744 \uAC80\uC0AC\uD558\uB294 \uC911\uC5D0 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

# Note to translators: An XPath expression was not of the type required in a particular context. However, the location
# of the problematic expression is unknown.
typeCheckUnkLocErr = \uC54C \uC218 \uC5C6\uB294 \uC704\uCE58\uC5D0\uC11C \uD45C\uD604\uC2DD\uC758 \uC720\uD615\uC744 \uAC80\uC0AC\uD558\uB294 \uC911\uC5D0 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

# Note to translators: The substitution text is the name of a commandline option that was not recognized.
illegalCmdlineOptionErr = ''{0}'' \uBA85\uB839\uD589 \uC635\uC158\uC774 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# Note to translators: The substitution text is the name of a commandline option.
cmdlineOptMissingArgErr = ''{0}'' \uBA85\uB839\uD589 \uC635\uC158\uC5D0 \uD544\uC218 \uC778\uC218\uAC00 \uB204\uB77D\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

# Note to translators: This message is used to indicate the severity of another message. The substitution text contains
# two error messages. The spacing before the second substitution text indents it the same amount as the first in
# English.
warningPlusWrappedMsg = \uACBD\uACE0\:  ''{0}''\n       \:{1}

# Note to translators: This message is used to indicate the severity of another message. The substitution text is an
# error message.
warningMsg = \uACBD\uACE0\:  ''{0}''

# Note to translators: This message is used to indicate the severity of another message. The substitution text contains
# two error messages. The spacing before the second substitution text indents it the same amount as the first in
# English.
fatalErrPlusWrappedMsg = \uC2EC\uAC01\uD55C \uC624\uB958\:  ''{0}''\n           \:{1}

# Note to translators: This message is used to indicate the severity of another message. The substitution text is an
# error message.
fatalErrMsg = \uC2EC\uAC01\uD55C \uC624\uB958\:  ''{0}''

# Note to translators: This message is used to indicate the severity of another message. The substitution text contains
# two error messages. The spacing before the second substitution text indents it the same amount as the first in
# English.
errorPlusWrappedMsg = \uC624\uB958\:  ''{0}''\n     \:{1}

# Note to translators: This message is used to indicate the severity of another message. The substitution text is an
# error message.
errorMsg = \uC624\uB958\:  ''{0}''

# Note to translators: The substitution text is the name of a class.
transformWithTransletStr = ''{0}'' translet\uC744 \uC0AC\uC6A9\uD558\uC5EC \uBCC0\uD658\uD558\uC2ED\uC2DC\uC624.

# Note to translators: The first substitution is the name of a class, while the second substitution is the name of a
# jar file.
transformWithJarStr = ''{1}'' jar \uD30C\uC77C\uC758 ''{0}'' Translet\uC744 \uC0AC\uC6A9\uD558\uC5EC \uBCC0\uD658\uD558\uC2ED\uC2DC\uC624.

# Note to translators: "TransformerFactory" is the name of a Java interface and must not be translated. The substitution
# text is the name of the class that could not be instantiated.
couldNotCreateTransFact = TransformerFactory \uD074\uB798\uC2A4 ''{0}''\uC758 \uC778\uC2A4\uD134\uC2A4\uB97C \uC791\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: This message is produced when the user specified a name for the translet class that contains
# characters that are not permitted in a Java class name. The substitution text "{0}" specifies the name the user
# requested, while "{1}" specifies the name the processor used instead.
transletNameJavaConflict = ''{0}'' \uC774\uB984\uC740 Java \uD074\uB798\uC2A4 \uC774\uB984\uC5D0\uC11C \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uB294 \uBB38\uC790\uB97C \uD3EC\uD568\uD558\uACE0 \uC788\uC73C\uBBC0\uB85C Translet \uD074\uB798\uC2A4 \uC774\uB984\uC73C\uB85C \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uB300\uC2E0\uC5D0 ''{1}'' \uC774\uB984\uC774 \uC0AC\uC6A9\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

# Note to translators: The following message is used as a header. All the error messages are collected together and
# displayed beneath this message.
compilerErrorKey = \uCEF4\uD30C\uC77C\uB7EC \uC624\uB958\:

# Note to translators: The following message is used as a header. All the warning messages are collected together and
# displayed beneath this message.
compilerWarningKey = \uCEF4\uD30C\uC77C\uB7EC \uACBD\uACE0\:

# Note to translators: The following message is used as a header. All the error messages that are produced when the
# stylesheet is applied to an input document are collected together and displayed beneath this message. A 'translet' is
# the compiled form of a stylesheet (see above).
runtimeErrorKey = Translet \uC624\uB958\:

# Note to translators: An attribute whose value is constrained to be a "QName" or a list of "QNames" had a value that
# was incorrect. 'QName' is an XML syntactic term that must not be translated. The substitution text contains the
# actual value of the attribute.
invalidQnameErr = \uAC12\uC774 QName \uB610\uB294 QName\uC758 \uD654\uC774\uD2B8 \uC2A4\uD398\uC774\uC2A4\uB85C \uAD6C\uBD84\uB41C \uBAA9\uB85D\uC774\uC5B4\uC57C \uD558\uB294 \uC18D\uC131\uC5D0 ''{0}'' \uAC12\uC774 \uC788\uC2B5\uB2C8\uB2E4.

# Note to translators: An attribute whose value is required to be an "NCName". 'NCName' is an XML syntactic term that
# must not be translated. The substitution text contains the actual value of the attribute.
invalidNcnameErr = \uAC12\uC774 NCName\uC774\uC5B4\uC57C \uD558\uB294 \uC18D\uC131\uC5D0 ''{0}'' \uAC12\uC774 \uC788\uC2B5\uB2C8\uB2E4.

# Note to translators: An attribute with an incorrect value was encountered. The permitted value is one of the literal
# values "xml", "html" or "text"; it is also permitted to have the form of a QName that is not also an NCName. The terms
# "method", "xsl:output", "xml", "html" and "text" are keywords that must not be translated. The term
# "qname-but-not-ncname" is an XML syntactic term. The substitution text contains the actual value of the attribute.
invalidMethodInOutput = <xsl\:output> \uC694\uC18C\uC758 \uBA54\uC18C\uB4DC \uC18D\uC131\uC5D0 ''{0}'' \uAC12\uC774 \uC788\uC2B5\uB2C8\uB2E4. \uAC12\uC740 ''xml'', ''html'', ''text'' \uB610\uB294 qname-but-not-ncname \uC911 \uD558\uB098\uC5EC\uC57C \uD569\uB2C8\uB2E4.

jaxpGetFeatureNullName = TransformerFactory.getFeature(\uBB38\uC790\uC5F4 \uC774\uB984)\uC5D0\uC11C \uAE30\uB2A5 \uC774\uB984\uC774 \uB110(null)\uC774\uBA74 \uC548\uB429\uB2C8\uB2E4.

jaxpSetFeatureNullName = TransformerFactory.setFeature(\uBB38\uC790\uC5F4 \uC774\uB984, \uBD80\uC6B8 \uAC12)\uC5D0\uC11C \uAE30\uB2A5 \uC774\uB984\uC774 \uB110(null)\uC774\uBA74 \uC548\uB429\uB2C8\uB2E4.

jaxpUnsupportedFeature = \uC774 TransformerFactory\uC5D0\uC11C ''{0}'' \uAE30\uB2A5\uC744 \uC124\uC815\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: This message describes an internal error in the processor. The term "byte code" is a Java
# technical term for the executable code in a Java method, and "try-catch-finally block" refers to the Java keywords
# with those names. "Outlined" is a technical term internal to XSLTC and should not be translated.
outlineErrTryCatch = Internal XSLTC error\:  the generated byte code contains a try-catch-finally block and cannot be outlined.

# Note to translators: This message describes an internal error in the processor. The terms "OutlineableChunkStart" and
# "OutlineableChunkEnd" are the names of classes internal to XSLTC and should not be translated. The message indicates
# that for every "start" there must be a corresponding "end", and vice versa, and that if one of a pair of "start" and
# "end" appears between another pair of corresponding "start" and "end", then the other half of the pair must also be
# between that same enclosing pair.
outlineErrUnbalancedMarkers = Internal XSLTC error\:  OutlineableChunkStart and OutlineableChunkEnd markers must be balanced and properly nested.

# Note to translators: This message describes an internal error in the processor. The term "byte code" is a Java
# technical term for the executable code in a Java method. The "method" that is being referred to is a Java method in a
# translet that XSLTC is generating in processing a stylesheet. The "instruction" that is being referred to is one of
# the instrutions in the Java byte code in that method. "Outlined" is a technical term internal to XSLTC and should not
# be translated.
outlineErrDeletedTarget = Internal XSLTC error\:  an instruction that was part of a block of byte code that was outlined is still referred to in the original method.

# Note to translators: This message describes an internal error in the processor. The "method" that is being referred to
# is a Java method in a translet that XSLTC is generating.
outlineErrMethodTooBig = Internal XSLTC error\:  a method in the translet exceeds the Java Virtual Machine limitation on the length of a method of 64 kilobytes.  This is usually caused by templates in a stylesheet that are very large.  Try restructuring your stylesheet to use smaller templates.

