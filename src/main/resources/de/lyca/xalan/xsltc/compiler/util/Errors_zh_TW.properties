multipleStylesheetErr = \u540C\u4E00\u500B\u6A94\u6848\u4E2D\u5B9A\u7FA9\u4E00\u500B\u4EE5\u4E0A\u7684\u6A23\u5F0F\u8868\u3002

# Note to translators: The substitution text is the name of a template. The same name was used on two different
# templates in the same stylesheet.
templateRedefErr = \u6B64\u6A23\u5F0F\u8868\u4E2D\u5DF2\u7D93\u5B9A\u7FA9\u6709\u7BC4\u672C ''{0}''\u3002

# Note to translators: The substitution text is the name of a template. A reference to the template name was
# encountered, but the template is undefined.
templateUndefErr = \u6B64\u6A23\u5F0F\u8868\u4E2D\u5C1A\u672A\u5B9A\u7FA9\u7BC4\u672C ''{0}''\u3002

# Note to translators: The substitution text is the name of a variable that was defined more than once.
variableRedefErr = \u76F8\u540C\u7684\u7BC4\u570D\u4E2D\u5B9A\u7FA9\u4E86\u591A\u500B\u8B8A\u6578 ''{0}''\u3002

# Note to translators: The substitution text is the name of a variable or parameter. A reference to the variable or
# parameter was found, but it was never defined.
variableUndefErr = \u8B8A\u6578\u6216\u53C3\u6578 ''{0}'' \u5C1A\u672A\u5B9A\u7FA9\u3002

# Note to translators: The word "class" here refers to a Java class. Processing the stylesheet required a class to be
# loaded, but it could not be found. The substitution text is the name of the class.
classNotFoundErr = \u627E\u4E0D\u5230\u985E\u5225 ''{0}''\u3002

# Note to translators: The word "method" here refers to a Java method. Processing the stylesheet required a reference
# to the method named by the substitution text, but it could not be found. "public" is the Java keyword.
methodNotFoundErr = \u627E\u4E0D\u5230\u5916\u90E8\u65B9\u6CD5 ''{0}''\uFF08\u5FC5\u9808\u662F\u516C\u7528\u7684\uFF09\u3002

# Note to translators: The word "method" here refers to a Java method. Processing the stylesheet required a reference
# to the method named by the substitution text, but no method with the required types of arguments or return type could
# be found.
argumentConversionErr = \u7121\u6CD5\u5C07\u547C\u53EB\u4E2D\u7684\u5F15\u6578/\u50B3\u56DE\u985E\u578B\u8F49\u63DB\u70BA\u65B9\u6CD5 ''{0}''

# Note to translators: The file or URI named in the substitution text is missing.
fileNotFoundErr = \u627E\u4E0D\u5230\u6A94\u6848\u6216 URI ''{0}''\u3002

# Note to translators: This message is displayed when the URI mentioned in the substitution text is not well-formed
# syntactically.
invalidUriErr = URI ''{0}'' \u7121\u6548\u3002

# Note to translators: The file or URI named in the substitution text exists but could not be opened.
fileAccessErr = \u7121\u6CD5\u958B\u555F\u6A94\u6848\u6216 URI ''{0}''\u3002

# Note to translators: <xsl:stylesheet> and <xsl:transform> are keywords that should not be translated.
missingRootErr = \u539F\u9810\u671F\u70BA <xsl\:stylesheet> \u6216 <xsl\:transform> \u5143\u7D20\u3002

# Note to translators: The stylesheet contained a reference to a namespace prefix that was undefined. The value of the
# substitution text is the name of the prefix.
namespaceUndefErr = \u540D\u7A31\u7A7A\u9593\u5B57\u9996 ''{0}'' \u5C1A\u672A\u5BA3\u544A\u3002

# Note to translators: The Java function named in the stylesheet could not be found.
functionResolveErr = \u7121\u6CD5\u89E3\u6790\u5C0D\u51FD\u6578 ''{0}'' \u7684\u547C\u53EB\u3002

# Note to translators: The substitution text is the name of a function. A literal string here means a constant string
# value.
needLiteralErr = ''{0}'' \u7684\u5F15\u6578\u5FC5\u9808\u662F\u6587\u5B57\u5B57\u4E32\u3002

# Note to translators: This message indicates there was a syntactic error in the form of an XPath expression. The
# substitution text is the expression.
xpathParserErr = \u5256\u6790 XPath \u8868\u793A\u5F0F ''{0}'' \u6642\u767C\u751F\u932F\u8AA4\u3002

# Note to translators: An element in the stylesheet requires a particular attribute named by the substitution text, but
# that attribute was not specified in the stylesheet.
requiredAttrErr = \u907A\u6F0F\u5FC5\u8981\u7684\u5C6C\u6027 ''{0}''\u3002

# Note to translators: This message indicates that a character not permitted in an XPath expression was encountered.
# The substitution text is the offending character.
illegalCharErr = XPath \u8868\u793A\u5F0F\u4E2D\u5305\u542B\u4E0D\u5408\u6CD5\u5B57\u5143 ''{0}''\u3002

# Note to translators: A processing instruction is a mark-up item in an XML document that request some behaviour of an
# XML processor. The form of the name of was invalid in this case, and the substitution text is the name.
illegalPiErr = \u8655\u7406\u6307\u793A\u7684\u540D\u7A31 ''{0}'' \u4E0D\u5408\u6CD5\u3002

# Note to translators: This message is reported if the stylesheet being processed attempted to construct an XML document
# with an attribute in a place other than on an element. The substitution text specifies the name of the attribute.
strayAttributeErr = \u5C6C\u6027 ''{0}'' \u8D85\u51FA\u5143\u7D20\u5916\u3002

# Note to translators: An attribute that wasn't recognized was specified on an element in the stylesheet. The attribute
# is named by the substitution text.
illegalAttributeErr = \u5C6C\u6027 ''{0}'' \u4E0D\u5408\u6CD5\u3002

# Note to translators: "import" and "include" are keywords that should not be translated. This messages indicates that
# the stylesheet named in the substitution text imported or included itself either directly or indirectly.
circularIncludeErr = \u5FAA\u74B0\u532F\u5165/\u4F75\u5165\u3002\u6A23\u5F0F\u8868 ''{0}'' \u5DF2\u7D93\u8F09\u5165\u3002

# Note to translators: A result-tree fragment is a portion of a resulting XML document represented as a tree.
# "<xsl:sort>" is a keyword and should not be translated.
resultTreeSortErr = \u7D50\u679C\u6A39\u7247\u6BB5\u7121\u6CD5\u6392\u5E8F\uFF08<xsl\:sort> \u5143\u7D20\u88AB\u5FFD\u7565\uFF09\u3002\u60A8\u5FC5\u9808\u65BC\u5EFA\u7ACB\u7D50\u679C\u6A39\u6642\uFF0C\u5C07\u7BC0\u9EDE\u6392\u5E8F\u3002

# Note to translators: A name can be given to a particular style to be used to format decimal values. The substitution
# text gives the name of such a style for which more than one declaration was encountered.
symbolsRedefErr = \u5DF2\u7D93\u5B9A\u7FA9\u6709\u5341\u9032\u4F4D\u683C\u5F0F ''{0}''\u3002

# Note to translators: The stylesheet version named in the substitution text is not supported.
xslVersionErr = XSL \u7248\u672C ''{0}'' \u4E0D\u53D7 XSLTC \u652F\u63F4\u3002

# Note to translators: The definitions of one or more variables or parameters depend on one another.
circularVariableErr = ''{0}'' \u4E2D\u5305\u542B\u5FAA\u74B0\u8B8A\u6578/\u53C3\u6578\u53C3\u7167\u3002

# Note to translators: The operator in an expresion with two operands was not recognized.
illegalBinaryOpErr = \u4E8C\u9032\u4F4D\u8868\u793A\u5F0F\u7684\u904B\u7B97\u5B50\u4E0D\u660E\u3002

# Note to translators: This message is produced if a reference to a function has too many or too few arguments.
illegalArgErr = \u51FD\u6578\u547C\u53EB\u7684\u5F15\u6578\u4E0D\u5408\u6CD5\u3002

# Note to translators: "document()" is the name of function and must not be translated. A node-set is a set of the nodes
# in the tree representation of an XML document.
documentArgErr = document() \u51FD\u6578\u7684\u7B2C\u4E8C\u500B\u5F15\u6578\u5FC5\u9808\u662F\u7BC0\u9EDE\u96C6\u3002

# Note to translators: "<xsl:when>" and "<xsl:choose>" are keywords and should not be translated. This message describes
# a syntax error in the stylesheet.
missingWhenErr = <xsl\:choose> \u4E2D\u81F3\u5C11\u8981\u6709\u4E00\u500B <xsl\:when> \u5143\u7D20\u3002

# Note to translators: "<xsl:otherwise>" and "<xsl:choose>" are keywords and should not be translated. This message
# describes a syntax error in the stylesheet.
multipleOtherwiseErr = <xsl\:choose> \u4E2D\u53EA\u63A5\u53D7\u4E00\u500B <xsl\:otherwise> \u5143\u7D20\u3002

# Note to translators: "<xsl:otherwise>" and "<xsl:choose>" are keywords and should not be translated. This message
# describes a syntax error in the stylesheet.
strayOtherwiseErr = <xsl\:otherwise> \u53EA\u80FD\u7528\u5728 <xsl\:choose> \u4E2D\u3002

# Note to translators: "<xsl:when>" and "<xsl:choose>" are keywords and should not be translated. This message describes
# a syntax error in the stylesheet.
strayWhenErr = <xsl\:when> \u53EA\u80FD\u7528\u5728 <xsl\:choose> \u4E2D\u3002

# Note to translators: "<xsl:when>", "<xsl:otherwise>" and "<xsl:choose>" are keywords and should not be translated.
# This message describes a syntax error in the stylesheet.
whenElementErr = <xsl\:choose> \u4E2D\u53EA\u63A5\u53D7 <xsl\:when> \u548C <xsl\:otherwise> \u5169\u500B\u5143\u7D20\u3002

# Note to translators: "<xsl:attribute-set>" and "name" are keywords that should not be translated.
unnamedAttribsetErr = <xsl\:attribute-set> \u907A\u6F0F 'name' \u5C6C\u6027\u3002

# Note to translators: An element in the stylesheet contained an element of a type that it was not permitted to contain.
illegalChildErr = \u5B50\u9805\u5143\u7D20\u4E0D\u5408\u6CD5\u3002

# Note to translators: The stylesheet tried to create an element with a name that was not a valid XML name. The
# substitution text contains the name.
illegalElemNameErr = \u4E0D\u53EF\u4EE5\u547C\u53EB\u5143\u7D20 ''{0}''

# Note to translators: The stylesheet tried to create an attribute with a name that was not a valid XML name. The
# substitution text contains the name.
illegalAttrNameErr = \u4E0D\u53EF\u4EE5\u547C\u53EB\u5143\u7D20 ''{0}''

# Note to translators: The children of the outermost element of a stylesheet are referred to as top-level elements. No
# text should occur within that outermost element unless it is within a top-level element. This message indicates that
# that constraint was violated. "<xsl:stylesheet>" is a keyword that should not be translated.
illegalTextNodeErr = \u6587\u5B57\u8CC7\u6599\u8D85\u51FA\u9802\u5C64 <xsl\:stylesheet> \u5143\u7D20\u3002

# Note to translators: JAXP is an acronym for the Java API for XML Processing. This message indicates that the XML
# parser provided to XSLTC to process the XML input document had a configuration problem.
saxParserConfigErr = JAXP \u5256\u6790\u5668\u672A\u6B63\u78BA\u914D\u7F6E

# Note to translators: The substitution text names the internal error encountered.
internalErr = \u767C\u751F\u7121\u6CD5\u5FA9\u539F\u7684 XSLTC \u5167\u90E8\u932F\u8AA4\uFF1A''{0}''

# Note to translators: The stylesheet contained an element that was not recognized as part of the XSL syntax. The
# substitution text gives the element name.
unsupportedXslErr = XSL \u5143\u7D20 ''{0}'' \u4E0D\u53D7\u652F\u63F4\u3002

# Note to translators: The stylesheet referred to an extension to the XSL syntax and indicated that it was defined by
# XSLTC, but XSTLC does not recognized the particular extension named. The substitution text gives the extension name.
unsupportedExtErr = XSLTC \u5EF6\u4F38\u9805\u76EE ''{0}'' \u7121\u6CD5\u8FA8\u8B58\u3002

# Note to translators: The XML document given to XSLTC as a stylesheet was not, in fact, a stylesheet. XSLTC is able to
# detect that in this case because the outermost element in the stylesheet has to be declared with respect to the XSL
# namespace URI, but no declaration for that namespace was seen.
missingXsltUriErr = \u8F38\u5165\u6587\u4EF6\u4E0D\u662F\u6A23\u5F0F\u8868\uFF08XSL \u540D\u7A31\u7A7A\u9593\u672A\u5728\u6839\u5143\u7D20\u4E2D\u5BA3\u544A\uFF09\u3002

# Note to translators: XSLTC could not find the stylesheet document with the name specified by the substitution text.
missingXsltTargetErr = \u627E\u4E0D\u5230\u6A23\u5F0F\u8868\u76EE\u6A19 ''{0}''\u3002

# Note to translators: This message represents an internal error in condition in XSLTC. The substitution text is the
# class name in XSLTC that is missing some functionality.
notImplementedErr = \u5C1A\u672A\u5BE6\u4F5C\uFF1A''{0}''\u3002

# Note to translators: The XML document given to XSLTC as a stylesheet was not, in fact, a stylesheet.
notStylesheetErr = \u8F38\u5165\u6587\u4EF6\u672A\u5305\u542B XSL \u6A23\u5F0F\u8868\u3002

# Note to translators: The element named in the substitution text was encountered in the stylesheet but is not
# recognized.
elementParseErr = \u7121\u6CD5\u5256\u6790\u5143\u7D20 ''{0}''

# Note to translators: "use", "<key>", "node", "node-set", "string" and "number" are keywords in this context and should
# not be translated. This message indicates that the value of the "use" attribute was not one of the permitted values.
keyUseAttrErr = <key> \u7684 use \u5C6C\u6027\u5FC5\u9808\u662F node\u3001node-set\u3001string \u6216 number\u3002

# Note to translators: An XML document can specify the version of the XML specification to which it adheres. This
# message indicates that the version specified for the output document was not valid.
outputVersionErr = \u8F38\u51FA XML \u6587\u4EF6\u7248\u672C\u61C9\u8A72\u662F 1.0

# Note to translators: The operator in a comparison operation was not recognized.
illegalRelatOpErr = \u95DC\u806F\u5F0F\u8868\u793A\u5F0F\u7684\u904B\u7B97\u5B50\u4E0D\u660E

# Note to translators: An attribute set defines as a set of XML attributes that can be added to an element in the output
# XML document as a group. This message is reported if the name specified was not used to declare an attribute set. The
# substitution text is the name that is in error.
attribsetUndefErr = \u5617\u8A66\u4F7F\u7528\u4E0D\u5B58\u5728\u7684\u5C6C\u6027\u96C6 ''{0}''\u3002

# Note to translators: The term "attribute value template" is a term defined by XSLT which describes the value of an
# attribute that is determined by an XPath expression. The message indicates that the expression was syntactically
# incorrect; the substitution text contains the expression that was in error.
attrValTemplateErr = \u7121\u6CD5\u5256\u6790\u5C6C\u6027\u503C\u7BC4\u672C ''{0}''\u3002

# Note to translators: ???
unknownSigTypeErr = \u985E\u5225 ''{0}'' \u7684\u7C3D\u7AE0\u8CC7\u6599\u985E\u578B\u4E0D\u660E\u3002

# Note to translators: The substitution text refers to data types. The message is displayed if a value in a particular
# context needs to be converted to type {1}, but that's not possible for a value of type {0}.
dataConversionErr = \u7121\u6CD5\u5C07\u8CC7\u6599\u985E\u578B ''{0}'' \u8F49\u63DB\u70BA ''{1}''\u3002

# Note to translators: "Templates" is a Java class name that should not be translated.
noTransletClassErr = \u6B64 Templates \u672A\u5305\u542B\u6709\u6548\u7684 translet \u985E\u5225\u5B9A\u7FA9\u3002

# Note to translators: "Templates" is a Java class name that should not be translated.
noMainTransletErr = \u6B64\u7BC4\u672C\u672A\u5305\u542B\u540D\u7A31\u70BA ''{0}'' \u7684\u985E\u5225\u3002

# Note to translators: The substitution text is the name of a class.
transletClassErr = \u7121\u6CD5\u8F09\u5165 Translet \u985E\u5225 ''{0}''\u3002

transletObjectErr = \u5DF2\u8F09\u5165 Translet \u985E\u5225\uFF0C\u4F46\u662F\u7121\u6CD5\u5EFA\u7ACB translet \u5BE6\u4F8B\u3002

# Note to translators: "ErrorListener" is a Java interface name that should not be translated. The message indicates
# that the user tried to set an ErrorListener object on object of the class named in the substitution text with "null"
# Java value.
errorListenerNullErr = \u5617\u8A66\u5C07 ''{0}'' \u7684 ErrorListener \u8A2D\u70BA null

# Note to translators: StreamSource, SAXSource and DOMSource are Java interface names that should not be translated.
jaxpUnknownSourceErr = XSLTC \u53EA\u652F\u63F4 StreamSource\u3001SAXSource \u8207 DOMSource

# Note to translators: "Source" is a Java class name that should not be translated. The substitution text is the name of
# Java method.
jaxpNoSourceErr = \u50B3\u905E\u5230 ''{0}'' \u7684 Source \u7269\u4EF6\u6C92\u6709\u5167\u5BB9\u3002

# Note to translators: The message indicates that XSLTC failed to compile the stylesheet into a translet (class file).
jaxpCompileErr = \u7121\u6CD5\u7DE8\u8B6F\u6A23\u5F0F\u8868

# Note to translators: "TransformerFactory" is a class name. In this context, an attribute is a property or setting of
# the TransformerFactory object. The substitution text is the name of the unrecognised attribute. The method used to
# retrieve the attribute is "getAttribute", so it's not clear whether it would be best to translate the term
# "attribute".
jaxpInvalidAttrErr = TransformerFactory \u7121\u6CD5\u8FA8\u8B58\u5C6C\u6027 ''{0}''\u3002

# Note to translators: "setResult()" and "startDocument()" are Java method names that should not be translated.
jaxpSetResultErr = setResult() \u5FC5\u9808\u5728 startDocument() \u4E4B\u524D\u547C\u53EB\u3002

# Note to translators: "Transformer" is a Java interface name that should not be translated. A Transformer object should
# contained a reference to a translet object in order to be used for transformations; this message is produced if that
# requirement is not met.
jaxpNoTransletErr = Transformer \u6C92\u6709\u7C21\u5316\u7684 translet \u7269\u4EF6\u3002

# Note to translators: The XML document that results from a transformation needs to be sent to an output handler object;
# this message is produced if that requirement is not met.
jaxpNoHandlerErr = \u6C92\u6709\u5DF2\u5B9A\u7FA9\u7684\u8F38\u51FA\u8655\u7406\u7A0B\u5F0F\u4F9B\u8F49\u63DB\u7D50\u679C\u4F7F\u7528\u3002

# Note to translators: "Result" is a Java interface name in this context. The substitution text is a method name.
jaxpNoResultErr = \u50B3\u905E\u5230 ''{0}'' \u7684 Result \u7269\u4EF6\u7121\u6548\u3002

# Note to translators: "Transformer" is a Java interface name. The user's program attempted to access an unrecognized
# property with the name specified in the substitution text. The method used to retrieve the property is
# "getOutputProperty", so it's not clear whether it would be best to translate the term "property".
jaxpUnknownPropErr = \u5617\u8A66\u5B58\u53D6\u7121\u6548\u7684 Transformer \u5167\u5BB9 ''{0}''\u3002

# Note to translators: SAX2DOM is the name of a Java class that should not be translated. This is an adapter in the
# sense that it takes a DOM object and converts it to something that uses the SAX API.
sax2domAdapterErr = \u7121\u6CD5\u5EFA\u7ACB SAX2DOM \u914D\u63A5\u5361\uFF1A''{0}''\u3002

# Note to translators: "XSLTCSource.build()" is a Java method name. "systemId" is an XML term that is short for "system
# identification".
xsltcSourceErr = \u547C\u53EB XSLTCSource.build() \u6642\uFF0C\u672A\u8A2D\u5B9A systemId \u3002

erResultNull = \u7D50\u679C\u4E0D\u61C9\u70BA\u7A7A\u503C

# Note to translators: This message indicates that the value argument of setParameter must be a valid Java Object.
jaxpInvalidSetParamValue = \u53C3\u6578 {0} \u7684\u503C\u5FC5\u9808\u662F\u6709\u6548\u7684 Java \u7269\u4EF6

compileStdinErr = -i \u9078\u9805\u5FC5\u9808\u548C -o \u9078\u9805\u4E00\u8D77\u4F7F\u7528\u3002

# Note to translators: This message contains usage information for a means of invoking XSLTC from the command-line. The
# message is formatted for presentation in English. The strings <output>, <directory>, etc. indicate user-specified
# argument values, and can be translated - the argument <package> refers to a Java package, so it should be handled in
# the same way the term is handled for JDK documentation.
compileUsageStr = \u7528\u6CD5\u6982\u8981\n   java de.lyca.xalan.xsltc.cmdline.Compile [-o <\u8F38\u51FA>]\n      [-d <directory>] [-j <Jar \u6A94>] [-p <\u5957\u4EF6>]\n      [-n] [-x] [-u] [-v] [-h] { <stylesheet> | -i }\n\nOPTIONS\n   -o <\u8F38\u51FA>    \u6307\u5B9A\u540D\u7A31 <\u8F38\u51FA> \u7D66\u7522\u751F\u7684\n                  translet\u3002\u4F9D\u9810\u8A2D\uFF0Ctranslet \u540D\u7A31\u662F\n                  \u884D\u751F\u81EA <stylesheet> \u540D\u7A31\u3002\u82E5\u7DE8\u8B6F\n                  \u591A\u4EFD\u6A23\u5F0F\u8868\u6642\uFF0C\u6B64\u9078\u9805\u6703\u88AB\u5FFD\u7565\u3002\n   -d <directory> \u6307\u5B9A translet \u7684\u76EE\u6A19\u76EE\u9304\n   -j <jarfile>   \u5C07 translet \u985E\u5225\u5C01\u88DD\u5728 jar \u6A94\u6848\u4E2D\uFF0C\u8A72\u6A94\u6848\n                  \u540D\u7A31\u7531 <jarfile> \u6307\u5B9A\n   -p <package>   \u6307\u5B9A\u6240\u6709\u7522\u751F\u7684\n                  translet \u985E\u5225\u4E4B\u5957\u4EF6\u540D\u7A31\u5B57\u9996\u3002\n   -n             \u555F\u7528\u7BC4\u672C\u5217\u5165\uFF08\u5E73\u5747\u800C\u8A00\uFF0C\u9810\u8A2D\u884C\u70BA\u8F03\u4F73\uFF09\u3002\n                  \n   -x             \u958B\u555F\u984D\u5916\u7684\u9664\u932F\u8A0A\u606F\u8F38\u51FA\n   -u             \u5C07\u5F15\u6578 <stylesheet> \u89E3\u8B6F\u70BA URL\n   -i             \u5F37\u5236\u7DE8\u8B6F\u5668\u5F9E stdin \u8B80\u53D6\u6A23\u5F0F\u8868\n   -v          \u5217\u5370\u7DE8\u8B6F\u5668\u7684\u7248\u672C\n   -h             \u5217\u5370\u6B64\u7528\u6CD5\u9673\u8FF0\u5F0F\n

# Note to translators: This message contains usage information for a means of invoking XSLTC from the command-line. The
# message is formatted for presentation in English. The strings <jarfile>, <document>, etc. indicate user-specified
# argument values, and can be translated - the argument <class> refers to a Java class, so it should be handled in the
# same way the term is handled for JDK documentation.
transformUsageStr = \u7528\u6CD5\u6982\u8981\n   java de.lyca.xalan.xsltc.cmdline.Transform [-j <Jar \u6A94>]\n   [-x] [-n <\u758A\u4EE3>] {-u <document_url> | <\u6587\u4EF6>}\n      <\u985E\u5225> [<param1>\=<value1> ...]\n\n   \u4F7F\u7528 translet <\u985E\u5225> \u8F49\u63DB\u6307\u5B9A\u70BA <\u6587\u4EF6> \u7684 \n   XML \u6587\u4EF6\u3002translet <class> \u4F4D\u65BC\n   \u4F7F\u7528\u8005\u7684 CLASSPATH \u4E2D\uFF0C\u6216\u9078\u64C7\u6027\u6307\u5B9A\u7684 <jarfile> \u4E2D\u3002\nOPTIONS\n   -j <Jar \u6A94>    \u6307\u5B9A\u7528\u4F86\u8F09\u5165 translet \u7684 Jar \u6A94\n   -x              \u958B\u555F\u984D\u5916\u7684\u9664\u932F\u8A0A\u606F\u8F38\u51FA\n-n <\u758A\u4EE3> \u57F7\u884C\u8F49\u63DB <\u758A\u4EE3> \u6B21\u4EE5\u53CA\n                   \u986F\u793A\u8A2D\u5B9A\u6A94\u8CC7\u8A0A\n   -u <document_url> \u6307\u5B9A XML \u8F38\u5165\u6587\u4EF6\u70BA URL\n

# Note to translators: "<xsl:sort>", "<xsl:for-each>" and "<xsl:apply-templates>" are keywords that should not be
# translated. The message indicates that an xsl:sort element must be a child of one of the other kinds of elements
# mentioned.
straySortErr = <xsl\:sort> \u53EA\u80FD\u7528\u5728 <xsl\:for-each> \u6216 <xsl\:apply-templates> \u5167\u3002

# Note to translators: The message indicates that the encoding requested for the output document was on that requires
# support that is not available from the Java Virtual Machine being used to execute the program.
unsupportedEncoding = \u6B64 JVM \u4E0D\u652F\u63F4\u8F38\u51FA\u7DE8\u78BC ''{0}''\u3002

# Note to translators: The message indicates that the XPath expression named in the substitution text was not well
# formed syntactically.
syntaxErr = ''{0}'' \u4E2D\u6709\u8A9E\u6CD5\u932F\u8AA4\u3002

# Note to translators: The substitution text is the name of a Java class. The term "constructor" here is the Java term.
# The message is displayed if XSLTC could not find a constructor for the specified class.
constructorNotFound = \u627E\u4E0D\u5230\u5916\u90E8\u5EFA\u69CB\u5B50 ''{0}''\u3002

# Note to translators: "static" is the Java keyword. The substitution text is the name of a function. The first argument
# of that function is not of the required type.
noJavaFunctThisRef = \u975E\u975C\u614B Java \u51FD\u6578 ''{0}'' \u7684\u7B2C\u4E00\u500B\u5F15\u6578\u4E0D\u662F\u6709\u6548\u7684\u7269\u4EF6\u53C3\u7167\u3002

# Note to translators: An XPath expression was not of the type required in a particular context. The substitution text
# is the expression that was in error.
typeCheckErr = \u6AA2\u67E5\u8868\u793A\u5F0F ''{0}'' \u7684\u985E\u578B\u6642\u767C\u751F\u932F\u8AA4\u3002

# Note to translators: An XPath expression was not of the type required in a particular context. However, the location
# of the problematic expression is unknown.
typeCheckUnkLocErr = \u5728\u4E0D\u660E\u4F4D\u7F6E\u6AA2\u67E5\u8868\u793A\u5F0F\u7684\u985E\u578B\u6642\uFF0C\u767C\u751F\u932F\u8AA4\u3002

# Note to translators: The substitution text is the name of a commandline option that was not recognized.
illegalCmdlineOptionErr = \u6307\u4EE4\u884C\u9078\u9805 ''{0}'' \u7121\u6548\u3002

# Note to translators: The substitution text is the name of a commandline option.
cmdlineOptMissingArgErr = \u6307\u4EE4\u884C\u9078\u9805 ''{0}'' \u907A\u6F0F\u5FC5\u8981\u7684\u5F15\u6578\u3002

# Note to translators: This message is used to indicate the severity of another message. The substitution text contains
# two error messages. The spacing before the second substitution text indents it the same amount as the first in
# English.
warningPlusWrappedMsg = \u8B66\u544A\uFF1A  ''{0}''\n       \uFF1A{1}

# Note to translators: This message is used to indicate the severity of another message. The substitution text is an
# error message.
warningMsg = \u8B66\u544A\uFF1A  ''{0}''

# Note to translators: This message is used to indicate the severity of another message. The substitution text contains
# two error messages. The spacing before the second substitution text indents it the same amount as the first in
# English.
fatalErrPlusWrappedMsg = \u56B4\u91CD\u932F\u8AA4\uFF1A  ''{0}''\n           \uFF1A{1}

# Note to translators: This message is used to indicate the severity of another message. The substitution text is an
# error message.
fatalErrMsg = \u56B4\u91CD\u932F\u8AA4\uFF1A  ''{0}''

# Note to translators: This message is used to indicate the severity of another message. The substitution text contains
# two error messages. The spacing before the second substitution text indents it the same amount as the first in
# English.
errorPlusWrappedMsg = \u932F\u8AA4\uFF1A  ''{0}''\n     \uFF1A{1}

# Note to translators: This message is used to indicate the severity of another message. The substitution text is an
# error message.
errorMsg = \u932F\u8AA4\uFF1A''{0}''

# Note to translators: The substitution text is the name of a class.
transformWithTransletStr = \u4F7F\u7528 translet ''{0}'' \u9032\u884C\u8F49\u63DB

# Note to translators: The first substitution is the name of a class, while the second substitution is the name of a
# jar file.
transformWithJarStr = \u5F9E Jar \u6A94 ''{1}'' \u4F7F\u7528 translet ''{0}'' \u9032\u884C\u8F49\u63DB

# Note to translators: "TransformerFactory" is the name of a Java interface and must not be translated. The substitution
# text is the name of the class that could not be instantiated.
couldNotCreateTransFact = \u7121\u6CD5\u5EFA\u7ACB TransformerFactory \u985E\u5225 ''{0}'' \u7684\u5BE6\u4F8B\u3002

# Note to translators: This message is produced when the user specified a name for the translet class that contains
# characters that are not permitted in a Java class name. The substitution text "{0}" specifies the name the user
# requested, while "{1}" specifies the name the processor used instead.
transletNameJavaConflict = \u7121\u6CD5\u4F7F\u7528\u540D\u7A31 ''{0}'' \u4F5C\u70BA translet \u985E\u5225\u7684\u540D\u7A31\uFF0C\u56E0\u70BA\u5B83\u542B\u6709\u5728 Java \u985E\u5225\u7684\u540D\u7A31\u4E2D\u4E0D\u5141\u8A31\u4F7F\u7528\u7684\u5B57\u5143\u3002\u5DF2\u6539\u70BA\u4F7F\u7528\u540D\u7A31 ''{1}''\u3002

# Note to translators: The following message is used as a header. All the error messages are collected together and
# displayed beneath this message.
compilerErrorKey = \u7DE8\u8B6F\u5668\u932F\u8AA4\uFF1A

# Note to translators: The following message is used as a header. All the warning messages are collected together and
# displayed beneath this message.
compilerWarningKey = \u7DE8\u8B6F\u5668\u8B66\u544A\uFF1A

# Note to translators: The following message is used as a header. All the error messages that are produced when the
# stylesheet is applied to an input document are collected together and displayed beneath this message. A 'translet' is
# the compiled form of a stylesheet (see above).
runtimeErrorKey = \u7DE8\u8B6F\u5668\u932F\u8AA4\uFF1A

# Note to translators: An attribute whose value is constrained to be a "QName" or a list of "QNames" had a value that
# was incorrect. 'QName' is an XML syntactic term that must not be translated. The substitution text contains the
# actual value of the attribute.
invalidQnameErr = \u4E00\u500B\u503C\u5FC5\u9808\u662F QName \u6216\u662F\u7A7A\u683C\u5206\u9694 QNames \u6E05\u55AE\u7684\u5C6C\u6027\uFF0C\u5177\u6709\u503C ''{0}''

# Note to translators: An attribute whose value is required to be an "NCName". 'NCName' is an XML syntactic term that
# must not be translated. The substitution text contains the actual value of the attribute.
invalidNcnameErr = \u4E00\u500B\u503C\u5FC5\u9808\u662F NCName \u7684\u5C6C\u6027\uFF0C\u5177\u6709\u503C ''{0}''

# Note to translators: An attribute with an incorrect value was encountered. The permitted value is one of the literal
# values "xml", "html" or "text"; it is also permitted to have the form of a QName that is not also an NCName. The terms
# "method", "xsl:output", "xml", "html" and "text" are keywords that must not be translated. The term
# "qname-but-not-ncname" is an XML syntactic term. The substitution text contains the actual value of the attribute.
invalidMethodInOutput = <xsl\:output> \u5143\u7D20\u7684\u65B9\u6CD5\u5C6C\u6027\u5177\u6709\u503C ''{0}''\u3002\u5176\u503C\u5FC5\u9808\u662F ''xml''\u3001''html''\u3001''text'' \u6216 qname-but-not-ncname \u5176\u4E2D\u4E4B\u3127

jaxpGetFeatureNullName = \u7279\u6027\u540D\u7A31\u5728 TransformerFactory.getFeature(String name) \u4E2D\u4E0D\u53EF\u662F\u7A7A\u503C\u3002

jaxpSetFeatureNullName = \u7279\u6027\u540D\u7A31\u5728 TransformerFactory.setFeature(String name, boolean value) \u4E2D\u4E0D\u53EF\u662F\u7A7A\u503C\u3002

jaxpUnsupportedFeature = \u7121\u6CD5\u5728\u9019\u500B TransformerFactory \u8A2D\u5B9A\u7279\u6027 ''{0}''\u3002

# Note to translators: This message describes an internal error in the processor. The term "byte code" is a Java
# technical term for the executable code in a Java method, and "try-catch-finally block" refers to the Java keywords
# with those names. "Outlined" is a technical term internal to XSLTC and should not be translated.
outlineErrTryCatch = Internal XSLTC error\:  the generated byte code contains a try-catch-finally block and cannot be outlined.

# Note to translators: This message describes an internal error in the processor. The terms "OutlineableChunkStart" and
# "OutlineableChunkEnd" are the names of classes internal to XSLTC and should not be translated. The message indicates
# that for every "start" there must be a corresponding "end", and vice versa, and that if one of a pair of "start" and
# "end" appears between another pair of corresponding "start" and "end", then the other half of the pair must also be
# between that same enclosing pair.
outlineErrUnbalancedMarkers = Internal XSLTC error\:  OutlineableChunkStart and OutlineableChunkEnd markers must be balanced and properly nested.

# Note to translators: This message describes an internal error in the processor. The term "byte code" is a Java
# technical term for the executable code in a Java method. The "method" that is being referred to is a Java method in a
# translet that XSLTC is generating in processing a stylesheet. The "instruction" that is being referred to is one of
# the instrutions in the Java byte code in that method. "Outlined" is a technical term internal to XSLTC and should not
# be translated.
outlineErrDeletedTarget = Internal XSLTC error\:  an instruction that was part of a block of byte code that was outlined is still referred to in the original method.

# Note to translators: This message describes an internal error in the processor. The "method" that is being referred to
# is a Java method in a translet that XSLTC is generating.
outlineErrMethodTooBig = Internal XSLTC error\:  a method in the translet exceeds the Java Virtual Machine limitation on the length of a method of 64 kilobytes.  This is usually caused by templates in a stylesheet that are very large.  Try restructuring your stylesheet to use smaller templates.
