
error0000 = {0}

currentNotAllowedInMatch = \uC77C\uCE58 \uD328\uD134\uC5D0\uC11C current() \uD568\uC218\uAC00 \uD5C8\uC6A9\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

currentTakesNoArgs = current() \uD568\uC218\uAC00 \uC778\uC218\uB97C \uC2B9\uC778\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

documentReplaced = document() \uD568\uC218 \uAD6C\uD604\uC774 de.lyca.xalan.xslt.FuncDocument\uB85C \uBC14\uB00C\uC5C8\uC2B5\uB2C8\uB2E4.

contextHasNoOwnerdoc = \uBB38\uB9E5\uC5D0 \uC18C\uC720\uC790 \uBB38\uC11C\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.

localnameHasTooManyArgs = local-name()\uC5D0 \uB9CE\uC740 \uC778\uC218\uAC00 \uC788\uC2B5\uB2C8\uB2E4.

namespaceuriHasTooManyArgs = namespace-uri()\uC5D0 \uB9CE\uC740 \uC778\uC218\uAC00 \uC788\uC2B5\uB2C8\uB2E4.

normalizespaceHasTooManyArgs = normalize-space()\uC5D0 \uB9CE\uC740 \uC778\uC218\uAC00 \uC788\uC2B5\uB2C8\uB2E4.

numberHasTooManyArgs = number()\uC5D0 \uB9CE\uC740 \uC778\uC218\uAC00 \uC788\uC2B5\uB2C8\uB2E4.

nameHasTooManyArgs = name()\uC5D0 \uB9CE\uC740 \uC778\uC218\uAC00 \uC788\uC2B5\uB2C8\uB2E4.

stringHasTooManyArgs = string()\uC5D0 \uB9CE\uC740 \uC778\uC218\uAC00 \uC788\uC2B5\uB2C8\uB2E4.

stringlengthHasTooManyArgs = string-length()\uC5D0 \uB9CE\uC740 \uC778\uC218\uAC00 \uC788\uC2B5\uB2C8\uB2E4.

translateTakes3Args = translate() \uD568\uC218\uAC00 \uC138 \uAC1C\uC758 \uC778\uC218\uB97C \uCDE8\uD569\uB2C8\uB2E4.

unparsedentityuriTakes1Arg = unparsed-entity-uri \uD568\uC218\uB294 \uD558\uB098\uC758 \uC778\uC218\uB97C \uCDE8\uD574\uC57C \uD569\uB2C8\uB2E4.

namespaceaxisNotImplemented = \uC774\uB984 \uACF5\uAC04 \uCD95\uC774 \uC544\uC9C1 \uAD6C\uD604\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.

unknownAxis = \uC54C \uC218 \uC5C6\uB294 \uCD95\: {0}

unknownMatchOperation = \uC54C \uC218 \uC5C6\uB294 \uC77C\uCE58 \uC870\uC791\uC785\uB2C8\uB2E4.

incorrectArgLength = processing-instruction() node \uD14C\uC2A4\uD2B8\uC758 \uC778\uC218 \uAE38\uC774\uAC00 \uC62C\uBC14\uB974\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

cantConvertToNumber = {0}\uC744(\uB97C) \uC22B\uC790\uB85C \uBCC0\uD658\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

cantConvertToNodelist = {0}\uC744(\uB97C) NodeList\uB85C \uBCC0\uD658\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

cantConvertToMutablenodelist = {0}\uC744(\uB97C) NodeSetDTM\uC73C\uB85C \uBCC0\uD658\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

cantConvertToType = {0}\uC744(\uB97C) \uC720\uD615 \uBC88\uD638 {1}(\uC73C)\uB85C \uBCC0\uD658\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

expectedMatchPattern = \uC608\uC0C1\uB41C getMatchScore\uC758 \uD328\uD134 \uC77C\uCE58\uC785\uB2C8\uB2E4.

couldnotGetVarNamed = \uC774\uB984\uC774 {0}\uC778 \uBCC0\uC218\uB97C \uAC00\uC838\uC62C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

unknownOpcode = \uC624\uB958. \uC54C \uC218 \uC5C6\uB294 op \uCF54\uB4DC\: {0}

extraIllegalTokens = \uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 \uCD94\uAC00 \uD1A0\uD070\: {0}

expectedDoubleQuote = \uB530\uC634\uD45C\uAC00 \uD2C0\uB9B0 \uB9AC\uD130\uB7F4\uC774 \uC788\uC2B5\uB2C8\uB2E4. \uD070\uB530\uC634\uD45C\uAC00 \uC608\uC0C1\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

expectedSingleQuote = \uB530\uC634\uD45C\uAC00 \uD2C0\uB9B0 \uB9AC\uD130\uB7F4\uC774 \uC788\uC2B5\uB2C8\uB2E4. \uC791\uC740\uB530\uC634\uD45C\uAC00 \uC608\uC0C1\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

emptyExpression = \uBE48 \uD45C\uD604\uC2DD\uC785\uB2C8\uB2E4.

expectedButFound = {0}\uC744(\uB97C) \uC608\uC0C1\uD588\uC73C\uB098 {1}\uC774(\uAC00) \uBC1C\uACAC\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

incorrectProgrammerAssertion = \uD504\uB85C\uADF8\uB798\uBA38 \uB2E8\uC5B8\uBB38\uC774 \uC62C\uBC14\uB974\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. - {0}

booleanArgNoLongerOptional = 19990709 XPath \uCD08\uC548\uC5D0\uC11C\uB294 \uBD80\uC6B8(...) \uC778\uC218\uAC00 \uB354 \uC774\uC0C1 \uC120\uD0DD\uC801\uC774\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

foundCommaButNoPrecedingArg = ','\uB97C \uBC1C\uACAC\uD588\uC73C\uB098 \uADF8 \uC55E\uC5D0 \uC5B4\uB5A0\uD55C \uC778\uC218\uB3C4 \uC5C6\uC2B5\uB2C8\uB2E4.

foundCommaButNoFollowingArg = ','\uB97C \uBC1C\uACAC\uD588\uC73C\uB098 \uB4A4\uC5D0 \uC5B4\uB5A0\uD55C \uC778\uC218\uB3C4 \uC5C6\uC2B5\uB2C8\uB2E4.

predicateIllegalSyntax = '..[predicate]' \uB610\uB294 '.[predicate]'\uB294 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 \uAD6C\uBB38\uC785\uB2C8\uB2E4. \uB300\uC2E0 'self\:\:node()[predicate]'\uB97C \uC0AC\uC6A9\uD558\uC2ED\uC2DC\uC624.

illegalAxisName = \uC720\uD6A8\uD558\uC9C0 \uC54A\uC740 \uCD95 \uC774\uB984\: {0}

unknownNodetype = \uC54C \uC218 \uC5C6\uB294 \uB178\uB4DC \uC720\uD615\: {0}

patternLiteralNeedsBeQuoted = \uD328\uD134 \uB9AC\uD130\uB7F4({0})\uC5D0\uB294 \uB530\uC634\uD45C\uAC00 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4.

couldnotBeFormattedToNumber = {0}\uC740(\uB294) \uC22B\uC790\uB85C \uD3EC\uB9F7\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

couldnotCreateXmlprocessorliaison = XML TransformerFactory Liaison\uC744 \uC791\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4\: {0}

didnotFindXpathSelectExp = \uC624\uB958. xpath \uC120\uD0DD \uD45C\uD604\uC2DD(-select)\uC744 \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

couldnotFindEndopAfterOplocationpath = \uC624\uB958. OP_LOCATIONPATH \uB4A4\uC5D0 ENDOP\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

errorOccured = \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

illegalVariableReference = \uBCC0\uC218\uC5D0 \uB300\uD574 \uC8FC\uC5B4\uC9C4 VariableReference\uAC00 \uBC94\uC704\uB97C \uBC97\uC5B4\uB0AC\uAC70\uB098 \uC815\uC758\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4. \uC774\uB984 \= {0}

axesNotAllowed = \uD558\uC704\:\: \uBC0F \uC18D\uC131\:\: \uCD95\uB9CC \uD328\uD134\uC5D0 \uC77C\uCE58\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uC704\uBC18 \uCD95 \= {0}

keyHasTooManyArgs = key()\uC758 \uC778\uC218 \uC218\uAC00 \uC62C\uBC14\uB974\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

countTakes1Arg = count \uD568\uC218\uB294 \uD558\uB098\uC758 \uC778\uC218\uB97C \uCDE8\uD574\uC57C \uD569\uB2C8\uB2E4.

couldnotFindFunction = \uD568\uC218\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4\: {0}

unsupportedEncoding = \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uB294 \uC778\uCF54\uB529\: {0}

problemInDtmNextsibling = getNextSibling\uC758 DTM\uC5D0 \uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. \uBCF5\uAD6C \uC2DC\uB3C4 \uC911\uC785\uB2C8\uB2E4.

cannotWriteToEmptynodelistimpl = \uD504\uB85C\uADF8\uB798\uBA38 \uC624\uB958\: EmptyNodeList\uB97C \uC4F8 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

setdomfactoryNotSupported = XPathContext\uC5D0\uC11C setDOMFactory\uB97C \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

prefixMustResolve = \uC811\uB450\uBD80\uB294 \uC774\uB984 \uACF5\uAC04\uC73C\uB85C \uBD84\uC11D\uB418\uC5B4\uC57C \uD569\uB2C8\uB2E4\: {0}

parseNotSupported = XPathContext\uC5D0\uC11C \uAD6C\uBB38 \uBD84\uC11D(InputSource \uC18C\uC2A4)\uC774 \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. {0}\uC744(\uB97C) \uC5F4 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

saxApiNotHandled = SAX API \uBB38\uC790(char ch[]... \uAC00 DTM\uC5D0 \uC758\uD574 \uCC98\uB9AC\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

ignorableWhitespaceNotHandled = ignorableWhitespace(char ch[]... \uAC00 DTM\uC5D0 \uC758\uD574 \uCC98\uB9AC\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

dtmCannotHandleNodes = DTMLiaison\uC774 {0} \uC720\uD615\uC758 \uB178\uB4DC\uB97C \uCC98\uB9AC\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

xercesCannotHandleNodes = DOM2Helper\uAC00 {0} \uC720\uD615\uC758 \uB178\uB4DC\uB97C \uCC98\uB9AC\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

xercesParseErrorDetails = DOM2Helper.parse \uC624\uB958\: \uC2DC\uC2A4\uD15C ID - {0} \uD68C\uC120 - {1}

xercesParseError = DOM2Helper.parse \uC624\uB958

invalidUtf16Surrogate = \uC798\uBABB\uB41C UTF-16 \uB300\uB9AC\uC790(surrogate)\uAC00 \uBC1C\uACAC\uB418\uC5C8\uC2B5\uB2C8\uB2E4\: {0} ?

oierror = IO \uC624\uB958

cannotCreateUrl = url\uC744 \uC791\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4\: {0}

xpathReadobject = XPath.readObject\uC758 {0}

functionTokenNotFound = \uD568\uC218 \uD1A0\uD070\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.

cannotDealXpathType = XPath \uC720\uD615\uC744 \uCC98\uB9AC\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4\: {0}

nodesetNotMutable = \uC774 NodeSet\uAC00 \uAC00\uBCC0\uC801\uC774\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

nodesetdtmNotMutable = \uC774 NodeSetDTM\uC774 \uAC00\uBCC0\uC801\uC774\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

varNotResolvable = \uBCC0\uC218\uB97C \uBD84\uC11D\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4\: {0}

nullErrorHandler = \uB110(null) \uC624\uB958 \uD578\uB4E4\uB7EC

progAssertUnknownOpcode = \uD504\uB85C\uADF8\uB798\uBA38\uC758 \uB2E8\uC5B8\uBB38\: \uC54C \uC218 \uC5C6\uB294 op \uCF54\uB4DC\: {0}

zeroOrOne = 0 \uB610\uB294 1

rtfNotSupportedXrtreefragselectwrapper = XRTreeFragSelectWrapper\uC5D0\uC11C rtf()\uB97C \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

asnodeiteratorNotSupportedXrtreefragselectwrapper = XRTreeFragSelectWrapper\uC5D0\uC11C asNodeIterator()\uB97C \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

detachNotSupportedXrtreefragselectwrapper = XRTreeFragSelectWrapper\uC5D0\uC11C detach()\uB97C \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# num() not supported by XRTreeFragSelectWrapper
numNotSupportedXrtreefragselectwrapper = XRTreeFragSelectWrapper\uC5D0\uC11C num()\uC744 \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# xstr() not supported by XRTreeFragSelectWrapper
xstrNotSupportedXrtreefragselectwrapper = XRTreeFragSelectWrapper\uC5D0\uC11C xstr()\uC744 \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# str() not supported by XRTreeFragSelectWrapper
strNotSupportedXrtreefragselectwrapper = XRTreeFragSelectWrapper\uC5D0\uC11C str()\uC744 \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

fsbNotSupportedXstringforchars = XStringForChars\uC5D0 \uB300\uD574 fsb()\uAC00 \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

couldNotFindVar = \uC774\uB984\uC774 {0}\uC778 \uBCC0\uC218\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

xstringforcharsCannotTakeString = XStringForChars\uB294 \uC778\uC218\uB85C \uBB38\uC790\uC5F4\uC744 \uAC00\uC838\uC62C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

faststringbufferCannotBeNull = FastStringBuffer \uC778\uC218\uB294 \uB110(null)\uC774 \uB420 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

twoOrThree = 2 \uB610\uB294 3

variableAccessedBeforeBind = \uBCC0\uC218\uAC00 \uBC14\uC778\uB4DC\uB418\uAE30 \uC804\uC5D0 \uBCC0\uC218\uC5D0 \uC561\uC138\uC2A4\uD588\uC2B5\uB2C8\uB2E4.

fsbCannotTakeString = XStringForFSB\uB294 \uC778\uC218\uB85C \uBB38\uC790\uC5F4\uC744 \uCDE8\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

settingWalkerRootToNull = \n \!\!\!\! \uC624\uB958. \uC6CC\uCEE4\uC758 \uB8E8\uD2B8\uB85C \uB110(null)\uC774 \uC124\uC815\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

nodesetdtmCannotIterate = \uC774 NodeSetDTM\uC740 \uC774\uC804 \uB178\uB4DC\uC5D0 \uBC18\uBCF5 \uC801\uC6A9\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

nodesetCannotIterate = \uC774 NodeSet\uB294 \uC774\uC804 \uB178\uB4DC\uC5D0 \uBC18\uBCF5 \uC801\uC6A9\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

nodesetdtmCannotIndex = \uC774 NodeSetDTM\uC740 \uC0C9\uC778 \uB610\uB294 \uCE74\uC6B4\uD305 \uD568\uC218\uB97C \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

nodesetCannotIndex = \uC774 NodeSet\uB294 \uC0C9\uC778 \uB610\uB294 \uCE74\uC6B4\uD305 \uD568\uC218\uB97C \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

cannotCallSetshouldcachenode = nextNode\uAC00 \uD638\uCD9C\uB41C \uD6C4\uC5D0 setShouldCacheNodes\uB97C \uD638\uCD9C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

onlyAllows = {0}\uC740(\uB294) {1} \uC778\uC218\uB9CC\uC744 \uD5C8\uC6A9\uD569\uB2C8\uB2E4.

unknownStep = getNextStepPos\uC5D0 \uD504\uB85C\uADF8\uB798\uBA38\uC758 \uB2E8\uC5B8\uBB38\uC774 \uC788\uC74C\: \uC54C \uC218 \uC5C6\uB294 stepType\: {0} 

# Note to translators: A relative location path is a form of XPath expression.
# The message indicates that such an expression was expected following the
# characters '/' or '//', but was not found.
expectedRelLocPath = '/' \uB610\uB294 '//' \uD1A0\uD070 \uB2E4\uC74C\uC5D0 \uAD00\uB828 \uC704\uCE58 \uACBD\uB85C\uAC00 \uC608\uC0C1\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

# Note to translators: A location path is a form of XPath expression.
# The message indicates that syntactically such an expression was expected,but
# the characters specified by the substitution text were encountered instead.
expectedLocPath = \uC704\uCE58 \uACBD\uB85C\uAC00 \uC608\uC0C1\uB418\uC5C8\uC9C0\uB9CC \uB2E4\uC74C \uD1A0\uD070\uC774 \uBC1C\uACAC\uB418\uC5C8\uC2B5\uB2C8\uB2E4.\:  {0}

# Note to translators: A location path is a form of XPath expression.
# The message indicates that syntactically such a subexpression was expected,
# but no more characters were found in the expression.
expectedLocPathAtEndExpr = \uC704\uCE58 \uACBD\uB85C\uAC00 \uC608\uC0C1\uB418\uC5C8\uC9C0\uB9CC XPath \uD45C\uD604\uC2DD\uC758 \uB05D\uC774 \uBC1C\uACAC\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

# Note to translators: A location step is part of an XPath expression.
# The message indicates that syntactically such an expression was expected
# following the specified characters.
expectedLocStep = '/' \uB610\uB294 '//' \uD1A0\uD070 \uB2E4\uC74C\uC5D0 \uC704\uCE58 \uB2E8\uACC4\uAC00 \uC608\uC0C1\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

# Note to translators: A node test is part of an XPath expression that is
# used to test for particular kinds of nodes. In this case, a node test that
# consists of an NCName followed by a colon and an asterisk or that consists
# of a QName was expected, but was not found.
expectedNodeTest = NCName\:* \uB610\uB294 QName\uACFC \uC77C\uCE58\uD558\uB294 \uB178\uB4DC \uD14C\uC2A4\uD2B8\uAC00 \uC608\uC0C1\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

# Note to translators: A step pattern is part of an XPath expression.
# The message indicates that syntactically such an expression was expected,
# but the specified character was found in the expression instead.
expectedStepPattern = \uB2E8\uACC4 \uD328\uD134\uC774 \uC608\uC0C1\uB418\uC5C8\uC9C0\uB9CC '/'\uAC00 \uBC1C\uACAC\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

# Note to translators: A relative path pattern is part of an XPath expression.
# The message indicates that syntactically such an expression was expected,
# but was not found.
expectedRelPathPattern = \uAD00\uB828 \uACBD\uB85C \uD328\uD134\uC774 \uC608\uC0C1\uB418\uC5C8\uC2B5\uB2C8\uB2E4.

# Note to translators: The substitution text is the name of a data type. The
# message indicates that a value of a particular type could not be converted
# to a value of type boolean.
cantConvertToBoolean = XPath \uD45C\uD604\uC2DD ''{0}''\uC758 XPathResult\uC5D0 \uBD80\uC6B8\uB85C \uBCC0\uD658\uB420 \uC218 \uC5C6\uB294 XPathResultType {1}\uC774(\uAC00) \uC788\uC2B5\uB2C8\uB2E4.

# Note to translators: Do not translate ANY_UNORDERED_NODE_TYPE and
# FIRST_ORDERED_NODE_TYPE.
cantConvertToSinglenode = XPath \uD45C\uD604\uC2DD ''{0}''\uC758 XPathResult\uC5D0 \uB2E8\uC77C \uB178\uB4DC\uB85C \uBCC0\uD658\uB420 \uC218 \uC5C6\uB294 XPathResultType {1}\uC774(\uAC00) \uC788\uC2B5\uB2C8\uB2E4. \uBA54\uC18C\uB4DC getSingleNodeValue\uB294 ANY_UNORDERED_NODE_TYPE \uBC0F FIRST_ORDERED_NODE_TYPE \uC720\uD615\uC5D0\uB9CC \uC801\uC6A9\uB429\uB2C8\uB2E4.

# Note to translators: Do not translate UNORDERED_NODE_SNAPSHOT_TYPE and
# ORDERED_NODE_SNAPSHOT_TYPE.
cantGetSnapshotLength = XPathResultType\uC774 {1}\uC774\uAE30 \uB54C\uBB38\uC5D0 XPath \uD45C\uD604\uC2DD ''{0}''\uC758 XPathResult\uC5D0\uC11C getSnapshotLength \uBA54\uC18C\uB4DC\uB97C \uD638\uCD9C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uC774 \uBA54\uC18C\uB4DC\uB294 UNORDERED_NODE_SNAPSHOT_TYPE \uBC0F ORDERED_NODE_SNAPSHOT_TYPE \uC720\uD615\uC5D0\uB9CC \uC801\uC6A9\uB429\uB2C8\uB2E4.

nonIteratorType = XPathResultType\uC774 {1}\uC774\uAE30 \uB54C\uBB38\uC5D0 XPath \uD45C\uD604\uC2DD ''{0}''\uC758 XPathResult\uC5D0\uC11C iterateNext \uBA54\uC18C\uB4DC\uB97C \uD638\uCD9C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uC774 \uBA54\uC18C\uB4DC\uB294 UNORDERED_NODE_ITERATOR_TYPE \uBC0F ORDERED_NODE_ITERATOR_TYPE \uC720\uD615\uC5D0\uB9CC \uC801\uC6A9\uB429\uB2C8\uB2E4.

# Note to translators: This message indicates that the document being operated
# upon changed, so the iterator object that was being used to traverse the
# document has now become invalid.
docMutated = \uACB0\uACFC\uAC00 \uB9AC\uD134\uB418\uC5C8\uC73C\uBBC0\uB85C \uBB38\uC11C\uAC00 \uBCC0\uACBD\uB429\uB2C8\uB2E4. \uBC18\uBCF5\uAE30\uAC00 \uC720\uD6A8\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

invalidXpathType = \uC798\uBABB\uB41C XPath \uC720\uD615 \uC778\uC218\: {0}

emptyXpathResult = \uBE44\uC5B4 \uC788\uB294 XPath \uACB0\uACFC \uC624\uBE0C\uC81D\uD2B8\uC785\uB2C8\uB2E4.

incompatibleTypes = XPath \uD45C\uD604\uC2DD ''{0}''\uC758 XPathResult\uC5D0 \uC9C0\uC815\uB41C XPathResultType {2}(\uC73C)\uB85C \uAC15\uC81C \uC2DC\uD589\uD560 \uC218 \uC5C6\uB294 XPathReultType {1}\uC774(\uAC00) \uC788\uC2B5\uB2C8\uB2E4.

nullResolver = \uB110(null) \uC811\uB450\uBD80 \uBD84\uC11D\uAE30\uB85C \uC811\uB450\uBD80\uB97C \uBD84\uC11D\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# Note to translators: The substitution text is the name of a data type. The
# message indicates that a value of a particular type could not be converted
# to a value of type string.
cantConvertToString = XPath \uD45C\uD604\uC2DD ''{0}''\uC758 XPathResult\uC5D0 \uBB38\uC790\uC5F4\uB85C \uBCC0\uD658\uD560 \uC218 \uC5C6\uB294 XPathResultType {1}\uC774(\uAC00) \uC788\uC2B5\uB2C8\uB2E4.

# Note to translators: Do not translate snapshotItem,
# UNORDERED_NODE_SNAPSHOT_TYPE and ORDERED_NODE_SNAPSHOT_TYPE.
nonSnapshotType = XPathResultType\uC774 {1}\uC774\uAE30 \uB54C\uBB38\uC5D0 XPath \uD45C\uD604\uC2DD ''{0}''\uC758 XPathResult\uC5D0\uC11C snapshotItem \uBA54\uC18C\uB4DC\uB97C \uD638\uCD9C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uC774 \uBA54\uC18C\uB4DC\uB294 UNORDERED_NODE_SNAPSHOT_TYPE \uBC0F ORDERED_NODE_SNAPSHOT_TYPE \uC720\uD615\uC5D0\uB9CC \uC801\uC6A9\uB429\uB2C8\uB2E4.

# Note to translators: XPathEvaluator is a Java interface name. An XPathEvaluator
# is created with respect to a particular XML document, and in this case the
# expression represented by this object was being evaluated with respect to a
# context node from a different document.
wrongDocument = \uCEE8\uD14D\uC2A4\uD2B8 \uB178\uB4DC\uB294 \uC774 XPathEvaluator\uB85C \uBC14\uC778\uB4DC\uB418\uB294 \uBB38\uC11C\uC5D0 \uD3EC\uD568\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

# Note to translators: The XPath expression cannot be evaluated with respect to
# this type of node.
wrongNodetype = \uCEE8\uD14D\uC2A4\uD2B8 \uB178\uB4DC \uC720\uD615\uC774 \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

xpathError = XPath\uC5D0 \uC54C \uC218 \uC5C6\uB294 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

cantConvertXpathresulttypeToNumber = XPath \uD45C\uD604\uC2DD ''{0}''\uC758 XPathResult\uC5D0 \uC22B\uC790\uB85C \uBCC0\uD658\uD560 \uC218 \uC5C6\uB294 XPathResultType {1}\uC774(\uAC00) \uC788\uC2B5\uB2C8\uB2E4.

extensionFunctionCannotBeInvoked = \uD655\uC7A5 \uD568\uC218\: XMLConstants.FEATURE_SECURE_PROCESSING \uAE30\uB2A5\uC774 true\uB85C \uC124\uC815\uB41C \uACBD\uC6B0 ''{0}''\uC744(\uB97C) \uD638\uCD9C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

resolveVariableReturnsNull = {0} \uBCC0\uC218\uC5D0 \uB300\uD55C resolveVariable\uC774 \uB110(null)\uC744 \uB9AC\uD134\uD569\uB2C8\uB2E4.

unsupportedReturnType = \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uB294 \uB9AC\uD134 \uC720\uD615\: {0}

sourceReturnTypeCannotBeNull = \uC18C\uC2A4 \uBC0F/\uB610\uB294 \uB9AC\uD134 \uC720\uD615\uC774 \uB110(null)\uC774\uBA74 \uC548\uB429\uB2C8\uB2E4.

argCannotBeNull = {0} \uC778\uC218\uAC00 \uB110(null)\uC774\uBA74 \uC548\uB429\uB2C8\uB2E4.

objectModelNull = {0}\#isObjectModelSupported( String objectModel )\uC740 objectModel \=\= null\uC744 \uC0AC\uC6A9\uD558\uC5EC \uD638\uCD9C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

objectModelEmpty = {0}\#isObjectModelSupported( String objectModel )\uC740 objectModel \=\= ""\uC744 \uC0AC\uC6A9\uD558\uC5EC \uD638\uCD9C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

featureNameNull = \uB110(null) \uC774\uB984\uC744 \uC0AC\uC6A9\uD558\uC5EC \uAE30\uB2A5\uC744 \uC124\uC815\uD558\uB824\uACE0 \uD569\uB2C8\uB2E4\: {0}\#setFeature( null, {1})

featureUnknown = \uC54C \uC218 \uC5C6\uB294 \uAE30\uB2A5 "{0}"\:{1}\#setFeature({0},{2})\uB97C \uC124\uC815\uD558\uB824\uACE0 \uD569\uB2C8\uB2E4.

gettingNullFeature = \uB110(null) \uC774\uB984\uC744 \uC0AC\uC6A9\uD558\uC5EC \uAE30\uB2A5\uC744 \uC124\uC815\uD558\uB824\uACE0 \uD569\uB2C8\uB2E4\: {0}\#getFeature(null)

gettingUnknownFeature = \uC54C \uC218 \uC5C6\uB294 \uAE30\uB2A5 "{0}"\uC744 \uAC00\uC838\uC624\uB824\uACE0 \uD569\uB2C8\uB2E4\: {1}\#getFeature({0})

nullXpathFunctionResolver = \uB110(null)\uC778 XPathFunctionResolver\uB97C \uC124\uC815\uD558\uB824\uACE0 \uD569\uB2C8\uB2E4\: {0}\#setXPathFunctionResolver(null)

nullXpathVariableResolver = \uB110(null)\uC778 XPathVariableResolver\uB97C \uC124\uC815\uD558\uB824\uACE0 \uD569\uB2C8\uB2E4\: {0}\#setXPathVariableResolver(null)

localeNameNotHandled = format-number \uD568\uC218\uC5D0 \uC788\uB294 \uB85C\uCF00\uC77C \uC774\uB984\uC774 \uC544\uC9C1 \uCC98\uB9AC\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.

propertyNotSupported = XSL \uD2B9\uC131\uC774 \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4\: {0}

dontDoAnythingWithNs = \uD2B9\uC131\uC5D0\uC11C {0} \uC774\uB984 \uACF5\uAC04\uACFC \uAD00\uB828\uD558\uC5EC \uD604\uC7AC \uC544\uBB34\uB7F0 \uC791\uC5C5\uB3C4 \uC218\uD589\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4\: {1}

securityException = XSL \uC2DC\uC2A4\uD15C \uD2B9\uC131\uC5D0 \uC561\uC138\uC2A4\uD558\uB294 \uC911 SecurityException\uC774 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4\: {0}

quoNoLongerDefined = \uC774\uC804 \uAD6C\uBB38\: quo(...)\uAC00 \uB354 \uC774\uC0C1 XPath\uC5D0 \uC815\uC758\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

needDerivedObjectToImplementNodetest = nodeTest\uB97C \uAD6C\uD604\uD558\uB824\uBA74 XPath\uC5D0 \uD30C\uC0DD\uB41C \uC624\uBE0C\uC81D\uD2B8\uAC00 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4.

functionTokenNotFound = \uD568\uC218 \uD1A0\uD070\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.

couldnotFindFunction = \uD568\uC218\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4\: {0}

cannotMakeUrlFrom = {0}\uC5D0\uC11C URL\uC744 \uC791\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

expandEntitiesNotSupported = DTM \uAD6C\uBB38 \uBD84\uC11D\uAE30\uC5D0 \uB300\uD574 -E \uC635\uC158\uC774 \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

illegalVariableReference = \uBCC0\uC218\uC5D0 \uB300\uD574 \uC8FC\uC5B4\uC9C4 VariableReference\uAC00 \uBC94\uC704\uB97C \uBC97\uC5B4\uB0AC\uAC70\uB098 \uC815\uC758\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4. \uC774\uB984 \= {0}

unsupportedEncoding = \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uB294 \uC778\uCF54\uB529\: {0}

uiLanguage = ko

helpLanguage = ko

language = ko

formatFailed = messageFormat \uD638\uCD9C \uC911 \uC608\uC678\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

version = >>>>>>> Xalan \uBC84\uC804 

version2 = <<<<<<<

yes = \uC608

line = \uD589 \#

column = \uC5F4 \#

xsldone = XSLProcessor\: \uC644\uB8CC

xpathOption = xpath \uC635\uC158\: 

optionin = [-in inputXMLURL]

optionselect = [-select xpath expression]

optionmatch = [-match match pattern(\uC77C\uCE58 \uC9C4\uB2E8\uC6A9)]

optionanyexpr = \uB610\uB294 xpath \uD45C\uD604\uC2DD\uB9CC\uC73C\uB85C \uC9C4\uB2E8 \uB364\uD504\uAC00 \uC218\uD589\uB420 \uAC83\uC785\uB2C8\uB2E4.

noparsermsg1 = XSL \uD504\uB85C\uC138\uC2A4\uAC00 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.

noparsermsg2 = ** \uAD6C\uBB38 \uBD84\uC11D\uAE30\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. **

noparsermsg3 = \uD074\uB798\uC2A4 \uACBD\uB85C\uB97C \uC810\uAC80\uD558\uC2ED\uC2DC\uC624.

noparsermsg4 = Java\uC6A9 IBM XML \uAD6C\uBB38 \uBD84\uC11D\uAE30\uAC00 \uC5C6\uC73C\uBA74

noparsermsg5 = IBM's AlphaWorks\: http\://www.alphaworks.ibm.com/formula/xml\uC5D0\uC11C \uB2E4\uC6B4\uB85C\uB4DC\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.

gtone = >1

zero = 0

one = 1

two = 2

three = 3
