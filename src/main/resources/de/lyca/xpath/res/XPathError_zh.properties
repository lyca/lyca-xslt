
error0000 = {0}

currentNotAllowedInMatch = \u5339\u914D\u6A21\u5F0F\u4E2D\u4E0D\u5141\u8BB8\u6709 current() \u51FD\u6570\uFF01

currentTakesNoArgs = current() \u51FD\u6570\u4E0D\u63A5\u53D7\u53C2\u6570\uFF01

documentReplaced = document() \u51FD\u6570\u5B9E\u73B0\u5DF2\u88AB de.lyca.xalan.xslt.FuncDocument \u66FF\u6362\uFF01

contextHasNoOwnerdoc = \u4E0A\u4E0B\u6587\u6CA1\u6709\u6240\u6709\u8005\u6587\u6863\uFF01

localnameHasTooManyArgs = local-name() \u7684\u53C2\u6570\u592A\u591A\u3002

namespaceuriHasTooManyArgs = namespace-uri() \u7684\u53C2\u6570\u592A\u591A\u3002

normalizespaceHasTooManyArgs = normalize-space() \u7684\u53C2\u6570\u592A\u591A\u3002

numberHasTooManyArgs = number() \u7684\u53C2\u6570\u592A\u591A\u3002

nameHasTooManyArgs = name() \u7684\u53C2\u6570\u592A\u591A\u3002

stringHasTooManyArgs = string() \u7684\u53C2\u6570\u592A\u591A\u3002

stringlengthHasTooManyArgs = string-length() \u7684\u53C2\u6570\u592A\u591A\u3002

translateTakes3Args = translate() \u51FD\u6570\u6709\u4E09\u4E2A\u53C2\u6570\uFF01

unparsedentityuriTakes1Arg = unparsed-entity-uri \u51FD\u6570\u5E94\u6709\u4E00\u4E2A\u53C2\u6570\uFF01

namespaceaxisNotImplemented = \u540D\u79F0\u7A7A\u95F4\u8F74\u5C1A\u672A\u5B9E\u73B0\uFF01

unknownAxis = \u672A\u77E5\u8F74\uFF1A{0}

unknownMatchOperation = \u672A\u77E5\u7684\u5339\u914D\u64CD\u4F5C\uFF01

incorrectArgLength = processing-instruction() \u8282\u70B9\u6D4B\u8BD5\u7684\u53C2\u6570\u957F\u5EA6\u4E0D\u6B63\u786E\uFF01

cantConvertToNumber = \u65E0\u6CD5\u5C06 {0} \u8F6C\u6362\u6210\u6570\u5B57

cantConvertToNodelist = \u65E0\u6CD5\u5C06 {0} \u8F6C\u6362\u6210 NodeList\uFF01

cantConvertToMutablenodelist = \u65E0\u6CD5\u5C06 {0} \u8F6C\u6362\u6210 NodeSetDTM\uFF01

cantConvertToType = \u65E0\u6CD5\u5C06 {0} \u8F6C\u6362\u6210 type\#{1}

expectedMatchPattern = getMatchScore \u4E2D\u51FA\u73B0\u671F\u671B\u7684\u5339\u914D\u6A21\u5F0F\uFF01

couldnotGetVarNamed = \u65E0\u6CD5\u83B7\u53D6\u540D\u4E3A {0} \u7684\u53D8\u91CF

unknownOpcode = \u9519\u8BEF\uFF01\u672A\u77E5\u64CD\u4F5C\u7801\uFF1A{0}

extraIllegalTokens = \u989D\u5916\u7684\u975E\u6CD5\u6807\u8BB0\uFF1A{0}

expectedDoubleQuote = \u9519\u8BEF\u5F15\u7528\u7684\u6587\u5B57... \u5E94\u8BE5\u4E3A\u53CC\u5F15\u53F7\uFF01

expectedSingleQuote = \u9519\u8BEF\u5F15\u7528\u7684\u6587\u5B57... \u5E94\u8BE5\u4E3A\u5355\u5F15\u53F7\uFF01

emptyExpression = \u7A7A\u8868\u8FBE\u5F0F\uFF01

expectedButFound = \u5E94\u8BE5\u4E3A {0}\uFF0C\u4F46\u53D1\u73B0\u7684\u662F\uFF1A{1}

incorrectProgrammerAssertion = \u7A0B\u5E8F\u5458\u7684\u65AD\u8A00\u4E0D\u6B63\u786E\uFF01\uFF0D {0}

booleanArgNoLongerOptional = 19990709 XPath \u8349\u7A3F\u4E2D\uFF0Cboolean(...) \u53C2\u6570\u4E0D\u518D\u53EF\u9009\u3002

foundCommaButNoPrecedingArg = \u5DF2\u627E\u5230\u201C,\u201D\uFF0C\u4F46\u524D\u9762\u6CA1\u6709\u81EA\u53D8\u91CF\uFF01

foundCommaButNoFollowingArg = \u5DF2\u627E\u5230\u201C,\u201D\uFF0C\u4F46\u540E\u9762\u6CA1\u6709\u8DDF\u81EA\u53D8\u91CF\uFF01

predicateIllegalSyntax = \u201C..[predicate]\u201D\u6216\u201C.[predicate]\u201D\u662F\u975E\u6CD5\u7684\u8BED\u6CD5\u3002\u8BF7\u6539\u4E3A\u4F7F\u7528\u201Cself\:\:node()[predicate]\u201D\u3002

illegalAxisName = \u975E\u6CD5\u7684\u8F74\u540D\u79F0\uFF1A{0}

unknownNodetype = \u672A\u77E5\u8282\u70B9\u7C7B\u578B\uFF1A{0}

patternLiteralNeedsBeQuoted = \u9700\u8981\u5F15\u7528\u6A21\u5F0F\u6587\u5B57\uFF08{0}\uFF09\uFF01

couldnotBeFormattedToNumber = {0} \u65E0\u6CD5\u683C\u5F0F\u5316\u4E3A\u6570\u5B57\uFF01

couldnotCreateXmlprocessorliaison = \u65E0\u6CD5\u521B\u5EFA XML TransformerFactory \u8054\u7CFB\uFF1A{0}

didnotFindXpathSelectExp = \u9519\u8BEF\uFF01\u627E\u4E0D\u5230 xpath \u9009\u62E9\u8868\u8FBE\u5F0F\uFF08-select\uFF09\u3002

couldnotFindEndopAfterOplocationpath = \u9519\u8BEF\uFF01\u5728 OP_LOCATIONPATH \u4E4B\u540E\u627E\u4E0D\u5230 ENDOP

errorOccured = \u51FA\u73B0\u9519\u8BEF\uFF01

illegalVariableReference = VariableReference \u8D4B\u7ED9\u4E86\u4E0A\u4E0B\u6587\u5916\u7684\u53D8\u91CF\u6216\u6CA1\u6709\u5B9A\u4E49\u7684\u53D8\u91CF\uFF01\u540D\u79F0 \= {0}

axesNotAllowed = \u5728\u5339\u914D\u6A21\u5F0F\u4E2D\u53EA\u5141\u8BB8\u51FA\u73B0 child\:\: \u548C attribute\:\: \u8F74\uFF01\u8FDD\u53CD\u7684\u8F74 \= {0}

keyHasTooManyArgs = key() \u7684\u53C2\u6570\u4E2A\u6570\u4E0D\u6B63\u786E\u3002

countTakes1Arg = count \u51FD\u6570\u5E94\u8BE5\u6709\u4E00\u4E2A\u53C2\u6570\uFF01

couldnotFindFunction = \u627E\u4E0D\u5230\u51FD\u6570\uFF1A{0}

unsupportedEncoding = \u4E0D\u53D7\u652F\u6301\u7684\u7F16\u7801\uFF1A{0}

problemInDtmNextsibling = getNextSibling \u8FC7\u7A0B\u4E2D\uFF0CDTM \u4E2D\u51FA\u73B0\u95EE\u9898...\u6B63\u5728\u5C1D\u8BD5\u6062\u590D

cannotWriteToEmptynodelistimpl = \u7A0B\u5E8F\u5458\u9519\u8BEF\uFF1A\u4E0D\u53EF\u5411 EmptyNodeList \u5199\u5165\u5185\u5BB9\u3002

setdomfactoryNotSupported = XPathContext \u4E0D\u652F\u6301 setDOMFactory\uFF01

prefixMustResolve = \u524D\u7F00\u5FC5\u987B\u89E3\u6790\u4E3A\u540D\u79F0\u7A7A\u95F4\uFF1A{0}

parseNotSupported = XPathContext \u4E2D\u4E0D\u652F\u6301 parse (InputSource source)\uFF01\u65E0\u6CD5\u6253\u5F00 {0}

saxApiNotHandled = DTM \u4E0D\u5904\u7406 SAX API characters(char ch[]...\uFF01

ignorableWhitespaceNotHandled = DTM \u4E0D\u5904\u7406 ignorableWhitespace(char ch[]...\uFF01

dtmCannotHandleNodes = DTMLiaison \u4E0D\u80FD\u5904\u7406\u7C7B\u578B {0} \u7684\u8282\u70B9

xercesCannotHandleNodes = DOM2Helper \u4E0D\u80FD\u5904\u7406\u7C7B\u578B {0} \u7684\u8282\u70B9

xercesParseErrorDetails = DOM2Helper.parse \u9519\u8BEF\uFF1ASystemID \uFF0D \u7B2C {0} \u884C \uFF0D {1}

xercesParseError = DOM2Helper.parse \u9519\u8BEF

invalidUtf16Surrogate = \u68C0\u6D4B\u5230\u65E0\u6548\u7684 UTF-16 \u8D85\u5927\u5B57\u7B26\u96C6\uFF1A{0}\uFF1F

oierror = IO \u9519\u8BEF

cannotCreateUrl = \u65E0\u6CD5\u4E3A {0} \u521B\u5EFA URL

xpathReadobject = \u5728 XPath.readObject \u4E2D\uFF1A{0}

functionTokenNotFound = \u627E\u4E0D\u5230\u51FD\u6570\u6807\u8BB0\u3002

cannotDealXpathType = \u65E0\u6CD5\u5904\u7406 XPath \u7C7B\u578B\uFF1A{0}

nodesetNotMutable = \u6B64 NodeSet \u662F\u4E0D\u6613\u53D8\u7684

nodesetdtmNotMutable = \u6B64 NodeSetDTM \u662F\u4E0D\u6613\u53D8\u7684

varNotResolvable = \u53D8\u91CF\u4E0D\u53EF\u89E3\u6790\uFF1A{0}

nullErrorHandler = \u9519\u8BEF\u5904\u7406\u7A0B\u5E8F\u4E3A\u7A7A

progAssertUnknownOpcode = \u7A0B\u5E8F\u5458\u65AD\u8A00\uFF1A\u672A\u77E5\u64CD\u4F5C\u7801\uFF1A{0}

zeroOrOne = 0 \u6216 1

rtfNotSupportedXrtreefragselectwrapper = XRTreeFragSelectWrapper \u4E0D\u652F\u6301 rtf()

asnodeiteratorNotSupportedXrtreefragselectwrapper = XRTreeFragSelectWrapper \u4E0D\u652F\u6301 asNodeIterator()

detachNotSupportedXrtreefragselectwrapper = XRTreeFragSelectWrapper \u4E0D\u652F\u6301 detach()

# num() not supported by XRTreeFragSelectWrapper
numNotSupportedXrtreefragselectwrapper = XRTreeFragSelectWrapper \u4E0D\u652F\u6301 num()

# xstr() not supported by XRTreeFragSelectWrapper
xstrNotSupportedXrtreefragselectwrapper = XRTreeFragSelectWrapper \u4E0D\u652F\u6301 xstr()

# str() not supported by XRTreeFragSelectWrapper
strNotSupportedXrtreefragselectwrapper = XRTreeFragSelectWrapper \u4E0D\u652F\u6301 str()

fsbNotSupportedXstringforchars = XStringForChars \u4E0D\u652F\u6301 fsb()

couldNotFindVar = \u627E\u4E0D\u5230\u540D\u4E3A {0} \u7684\u53D8\u91CF

xstringforcharsCannotTakeString = XStringForChars \u65E0\u6CD5\u5C06\u5B57\u7B26\u4E32\u4F5C\u4E3A\u81EA\u53D8\u91CF

faststringbufferCannotBeNull = FastStringBuffer \u81EA\u53D8\u91CF\u4E0D\u80FD\u4E3A\u7A7A

twoOrThree = 2 \u6216 3

variableAccessedBeforeBind = \u5728\u7ED1\u5B9A\u524D\u5DF2\u8BBF\u95EE\u53D8\u91CF\uFF01

fsbCannotTakeString = XStringForFSB \u65E0\u6CD5\u5C06\u5B57\u7B26\u4E32\u4F5C\u4E3A\u81EA\u53D8\u91CF\uFF01

settingWalkerRootToNull = \n \uFF01\uFF01\uFF01\uFF01\u9519\u8BEF\uFF01\u6B63\u5728\u5C06\u6B65\u884C\u7A0B\u5E8F\u7684\u6839\u8BBE\u7F6E\u4E3A\u7A7A\uFF01\uFF01\uFF01

nodesetdtmCannotIterate = \u6B64 NodeSetDTM \u65E0\u6CD5\u8FED\u4EE3\u5230\u5148\u524D\u7684\u8282\u70B9\uFF01

nodesetCannotIterate = \u6B64 NodeSet \u65E0\u6CD5\u8FED\u4EE3\u5230\u5148\u524D\u7684\u8282\u70B9\uFF01

nodesetdtmCannotIndex = \u6B64 NodeSetDTM \u65E0\u6CD5\u6267\u884C\u7D22\u5F15\u6216\u8BA1\u6570\u529F\u80FD\uFF01

nodesetCannotIndex = \u6B64 NodeSet \u65E0\u6CD5\u6267\u884C\u7D22\u5F15\u6216\u8BA1\u6570\u529F\u80FD\uFF01

cannotCallSetshouldcachenode = \u8C03\u7528 nextNode \u540E\u4E0D\u80FD\u8C03\u7528 setShouldCacheNode\uFF01

onlyAllows = {0} \u4EC5\u5141\u8BB8 {1} \u4E2A\u81EA\u53D8\u91CF

unknownStep = \u7A0B\u5E8F\u5458\u5728 getNextStepPos \u4E2D\u7684\u65AD\u8A00\uFF1A\u672A\u77E5\u7684 stepType\uFF1A{0}

# Note to translators: A relative location path is a form of XPath expression.
# The message indicates that such an expression was expected following the
# characters '/' or '//', but was not found.
expectedRelLocPath = \u5728\u201C/\u201D\u6216\u201C//\u201D\u6807\u8BB0\u540E\u5E94\u8BE5\u51FA\u73B0\u76F8\u5BF9\u4F4D\u7F6E\u8DEF\u5F84\u3002

# Note to translators: A location path is a form of XPath expression.
# The message indicates that syntactically such an expression was expected,but
# the characters specified by the substitution text were encountered instead.
expectedLocPath = \u5E94\u8BE5\u51FA\u73B0\u4F4D\u7F6E\u8DEF\u5F84\uFF0C\u4F46\u9047\u5230\u4EE5\u4E0B\u6807\u8BB0\:{0}

# Note to translators: A location path is a form of XPath expression.
# The message indicates that syntactically such a subexpression was expected,
# but no more characters were found in the expression.
expectedLocPathAtEndExpr = \u5E94\u8BE5\u51FA\u73B0\u4F4D\u7F6E\u8DEF\u5F84\uFF0C\u4F46\u53D1\u73B0\u7684\u5374\u662F XPath \u8868\u8FBE\u5F0F\u7684\u7ED3\u5C3E\u3002

# Note to translators: A location step is part of an XPath expression.
# The message indicates that syntactically such an expression was expected
# following the specified characters.
expectedLocStep = \u201C/\u201D\u6216\u201C//\u201D\u6807\u8BB0\u540E\u5E94\u8BE5\u51FA\u73B0\u4F4D\u7F6E\u6B65\u9AA4\u3002

# Note to translators: A node test is part of an XPath expression that is
# used to test for particular kinds of nodes. In this case, a node test that
# consists of an NCName followed by a colon and an asterisk or that consists
# of a QName was expected, but was not found.
expectedNodeTest = \u5E94\u8BE5\u51FA\u73B0\u4E0E NCName\:* \u6216 QName \u5339\u914D\u7684\u8282\u70B9\u6D4B\u8BD5\u3002

# Note to translators: A step pattern is part of an XPath expression.
# The message indicates that syntactically such an expression was expected,
# but the specified character was found in the expression instead.
expectedStepPattern = \u5E94\u8BE5\u51FA\u73B0\u6B65\u9AA4\u6A21\u5F0F\uFF0C\u4F46\u9047\u5230\u4E86\u201C/\u201D\u3002

# Note to translators: A relative path pattern is part of an XPath expression.
# The message indicates that syntactically such an expression was expected,
# but was not found.
expectedRelPathPattern = \u5E94\u8BE5\u51FA\u73B0\u76F8\u5BF9\u8DEF\u5F84\u6A21\u5F0F\u3002

# Note to translators: The substitution text is the name of a data type. The
# message indicates that a value of a particular type could not be converted
# to a value of type boolean.
cantConvertToBoolean = XPath \u8868\u8FBE\u5F0F\u201C{0}\u201D\u7684 XPathResult \u5177\u6709 XPathResultType {1}\uFF0C\u8BE5\u7C7B\u578B\u4E0D\u80FD\u8F6C\u6362\u4E3A\u5E03\u5C14\u578B\u3002

# Note to translators: Do not translate ANY_UNORDERED_NODE_TYPE and
# FIRST_ORDERED_NODE_TYPE.
cantConvertToSinglenode = XPath \u8868\u8FBE\u5F0F\u201C{0}\u201D\u7684 XPathResult \u5177\u6709 XPathResultType {1}\uFF0C\u8BE5\u7C7B\u578B\u4E0D\u80FD\u8F6C\u6362\u4E3A\u5355\u4E00\u8282\u70B9\u3002getSingleNodeValue \u65B9\u6CD5\u4EC5\u9002\u7528\u4E8E\u7C7B\u578B ANY_UNORDERED_NODE_TYPE \u548C FIRST_ORDERED_NODE_TYPE\u3002

# Note to translators: Do not translate UNORDERED_NODE_SNAPSHOT_TYPE and
# ORDERED_NODE_SNAPSHOT_TYPE.
cantGetSnapshotLength = \u4E0D\u80FD\u5BF9 XPath \u8868\u8FBE\u5F0F\u201C{0}\u201D\u7684 XPathResult \u8C03\u7528 getSnapshotLength \u65B9\u6CD5\uFF0C\u56E0\u4E3A\u8BE5\u8868\u8FBE\u5F0F\u7684 XPathResult \u7684 XPathResultType \u4E3A {1}\u3002\u6B64\u65B9\u6CD5\u4EC5\u9002\u7528\u4E8E\u7C7B\u578B UNORDERED_NODE_SNAPSHOT_TYPE \u548C ORDERED_NODE_SNAPSHOT_TYPE\u3002

nonIteratorType = \u4E0D\u80FD\u5BF9 XPath \u8868\u8FBE\u5F0F\u201C{0}\u201D\u7684 XPathResult \u8C03\u7528 iterateNext \u65B9\u6CD5\uFF0C\u56E0\u4E3A\u8BE5\u8868\u8FBE\u5F0F\u7684 XPathResult \u7684 XPathResultType \u4E3A {1}\u3002\u6B64\u65B9\u6CD5\u4EC5\u9002\u7528\u4E8E\u7C7B\u578B UNORDERED_NODE_ITERATOR_TYPE \u548C ORDERED_NODE_ITERATOR_TYPE\u3002

# Note to translators: This message indicates that the document being operated
# upon changed, so the iterator object that was being used to traverse the
# document has now become invalid.
docMutated = \u8FD4\u56DE\u7ED3\u679C\u540E\u6587\u6863\u53D1\u751F\u53D8\u5316\u3002\u8FED\u4EE3\u5668\u65E0\u6548\u3002

invalidXpathType = \u65E0\u6548\u7684 XPath \u7C7B\u578B\u81EA\u53D8\u91CF\uFF1A{0}

emptyXpathResult = \u7A7A\u7684 XPath \u7ED3\u679C\u5BF9\u8C61

incompatibleTypes = XPath \u8868\u8FBE\u5F0F\u201C{0}\u201D\u7684 XPathResult \u5177\u6709 XPathResultType {1}\uFF0C\u8BE5\u7C7B\u578B\u4E0D\u80FD\u5F3A\u5236\u8F6C\u6362\u4E3A\u6307\u5B9A\u7684 XPathResultType {2}\u3002

nullResolver = \u65E0\u6CD5\u4F7F\u7528\u7A7A\u7684\u524D\u7F00\u89E3\u6790\u5668\u89E3\u6790\u524D\u7F00\u3002

# Note to translators: The substitution text is the name of a data type. The
# message indicates that a value of a particular type could not be converted
# to a value of type string.
cantConvertToString = XPath \u8868\u8FBE\u5F0F\u201C{0}\u201D\u7684 XPathResult \u5177\u6709 XPathResultType {1}\uFF0C\u8BE5\u7C7B\u578B\u4E0D\u80FD\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\u3002

# Note to translators: Do not translate snapshotItem,
# UNORDERED_NODE_SNAPSHOT_TYPE and ORDERED_NODE_SNAPSHOT_TYPE.
nonSnapshotType = \u4E0D\u80FD\u5BF9 XPath \u8868\u8FBE\u5F0F\u201C{0}\u201D\u7684 XPathResult \u8C03\u7528\u65B9\u6CD5 snapshotItem\uFF0C\u56E0\u4E3A\u8BE5\u8868\u8FBE\u5F0F\u7684 XPathResult \u7684 XPathResultType \u4E3A {1}\u3002\u6B64\u65B9\u6CD5\u4EC5\u9002\u7528\u4E8E\u7C7B\u578B UNORDERED_NODE_SNAPSHOT_TYPE \u548C ORDERED_NODE_SNAPSHOT_TYPE\u3002

# Note to translators: XPathEvaluator is a Java interface name. An XPathEvaluator
# is created with respect to a particular XML document, and in this case the
# expression represented by this object was being evaluated with respect to a
# context node from a different document.
wrongDocument = \u4E0A\u4E0B\u6587\u8282\u70B9\u4E0D\u5C5E\u4E8E\u7ED1\u5B9A\u5230\u6B64 XPathEvaluator \u7684\u6587\u6863\u3002

# Note to translators: The XPath expression cannot be evaluated with respect to
# this type of node.
wrongNodetype = \u4E0D\u652F\u6301\u4E0A\u4E0B\u6587\u8282\u70B9\u7C7B\u578B\u3002

xpathError = XPath \u4E2D\u51FA\u73B0\u672A\u77E5\u9519\u8BEF

cantConvertXpathresulttypeToNumber = XPath \u8868\u8FBE\u5F0F\u201C{0}\u201D\u7684 XPathResult \u5177\u6709 XPathResultType {1}\uFF0C\u8BE5\u7C7B\u578B\u4E0D\u80FD\u8F6C\u6362\u4E3A\u6570\u5B57\u3002

extensionFunctionCannotBeInvoked = \u6269\u5C55\u51FD\u6570\uFF1A\u5F53 XMLConstants.FEATURE_SECURE_PROCESSING \u529F\u80FD\u8BBE\u7F6E\u4E3A true \u65F6\uFF0C\u65E0\u6CD5\u8C03\u7528\u201C{0}\u201D\u3002

resolveVariableReturnsNull = \u53D8\u91CF {0} \u7684 resolveVariable \u6B63\u5728\u8FD4\u56DE\u7A7A\u503C

unsupportedReturnType = \u4E0D\u53D7\u652F\u6301\u7684\u8FD4\u56DE\u7C7B\u578B\uFF1A{0}

sourceReturnTypeCannotBeNull = \u6E90\u548C\uFF0F\u6216\u8FD4\u56DE\u7C7B\u578B\u4E0D\u80FD\u4E3A\u7A7A

argCannotBeNull = {0} \u81EA\u53D8\u91CF\u4E0D\u80FD\u4E3A\u7A7A

objectModelNull = {0}\#isObjectModelSupported( String objectModel ) cannot be called with objectModel \=\= null

objectModelEmpty = {0}\#isObjectModelSupported( String objectModel ) cannot be called with objectModel \=\= ""

featureNameNull = \u6B63\u5728\u5C1D\u8BD5\u8BBE\u7F6E\u540D\u79F0\u4E3A\u7A7A\u7684\u7279\u5F81\uFF1A{0}\#setFeature( null, {1})

featureUnknown = \u6B63\u5728\u5C1D\u8BD5\u8BBE\u7F6E\u672A\u77E5\u7279\u5F81\u201C{0}\u201D\uFF1A{1}\#setFeature({0},{2})

gettingNullFeature = \u6B63\u5728\u5C1D\u8BD5\u83B7\u53D6\u540D\u79F0\u4E3A\u7A7A\u7684\u7279\u5F81\uFF1A{0}\#getFeature(null)

gettingUnknownFeature = \u6B63\u5728\u5C1D\u8BD5\u83B7\u53D6\u672A\u77E5\u7279\u5F81\u201C{0}\u201D\uFF1A{1}\#getFeature({0})

nullXpathFunctionResolver = \u6B63\u5728\u8BD5\u56FE\u8BBE\u7F6E\u7A7A\u7684 XPathFunctionResolver\uFF1A{0}\#setXPathFunctionResolver(null)

nullXpathVariableResolver = \u6B63\u5728\u8BD5\u56FE\u8BBE\u7F6E\u7A7A\u7684 XPathVariableResolver\uFF1A{0}\#setXPathVariableResolver(null)

localeNameNotHandled = \u5728\u672A\u5904\u7406\u8FC7\u7684 format-number \u51FD\u6570\u4E2D\u51FA\u73B0\u8BED\u8A00\u73AF\u5883\u540D\uFF01

propertyNotSupported = \u4E0D\u652F\u6301 XSL \u5C5E\u6027\uFF1A{0}

dontDoAnythingWithNs = \u5F53\u524D\u4E0D\u8981\u5728\u5C5E\u6027 {1} \u4E2D\u5BF9\u540D\u79F0\u7A7A\u95F4 {0} \u8FDB\u884C\u4EFB\u4F55\u5904\u7406

securityException = \u5728\u8BD5\u56FE\u8BBF\u95EE XSL \u7CFB\u7EDF\u5C5E\u6027 {0} \u65F6\u53D1\u751F SecurityException

quoNoLongerDefined = XPath \u4E2D\u4E0D\u518D\u5B9A\u4E49\u65E7\u8BED\u6CD5\uFF1Aquo(...)\u3002

needDerivedObjectToImplementNodetest = XPath \u9700\u8981\u4E00\u4E2A\u6D3E\u751F\u7684\u5BF9\u8C61\u4EE5\u5B9E\u73B0 nodeTest\uFF01

functionTokenNotFound = \u627E\u4E0D\u5230\u51FD\u6570\u6807\u8BB0\u3002

couldnotFindFunction = \u627E\u4E0D\u5230\u51FD\u6570\uFF1A{0}

cannotMakeUrlFrom = \u65E0\u6CD5\u4ECE {0} \u751F\u6210 URL

expandEntitiesNotSupported = DTM \u89E3\u6790\u5668\u4E0D\u652F\u6301 -E \u9009\u9879

illegalVariableReference = VariableReference \u8D4B\u7ED9\u4E86\u4E0A\u4E0B\u6587\u5916\u7684\u53D8\u91CF\u6216\u6CA1\u6709\u5B9A\u4E49\u7684\u53D8\u91CF\uFF01\u540D\u79F0 \= {0}

unsupportedEncoding = \u4E0D\u53D7\u652F\u6301\u7684\u7F16\u7801\uFF1A{0}

uiLanguage = zh

helpLanguage = zh

language = zh

formatFailed = \u5728 messageFormat \u8C03\u7528\u8FC7\u7A0B\u4E2D\u629B\u51FA\u4E86\u5F02\u5E38

version = >>>>>>> Xalan \u7248\u672C

version2 = <<<<<<<

yes = \u662F

line = \u884C\u53F7

column = \u5217\u53F7

xsldone = XSLProcessor\uFF1A\u5B8C\u6210

xpathOption = xpath \u9009\u9879\uFF1A

optionin = [-in inputXMLURL]

optionselect = [-select xpath \u8868\u8FBE\u5F0F]

optionmatch = [-match \u5339\u914D\u6A21\u5F0F\uFF08\u7528\u4E8E\u5339\u914D\u8BCA\u65AD\uFF09]

optionanyexpr = \u6216\u8005\u4EC5\u4E00\u4E2A xpath \u8868\u8FBE\u5F0F\u5C31\u5C06\u5B8C\u6210\u4E00\u4E2A\u8BCA\u65AD\u8F6C\u50A8

noparsermsg1 = XSL \u5904\u7406\u4E0D\u6210\u529F\u3002

noparsermsg2 = ** \u627E\u4E0D\u5230\u89E3\u6790\u5668 **

noparsermsg3 = \u8BF7\u68C0\u67E5\u60A8\u7684\u7C7B\u8DEF\u5F84\u3002

noparsermsg4 = \u5982\u679C\u6CA1\u6709 IBM \u7684 XML Parser for Java\uFF0C\u60A8\u53EF\u4EE5\u4ECE\u4EE5\u4E0B\u4F4D\u7F6E\u4E0B\u8F7D\u5B83\uFF1A

noparsermsg5 = IBM \u7684 AlphaWorks\uFF1Ahttp\://www.alphaworks.ibm.com/formula/xml

gtone = >1

zero = 0

one = 1

two = 2

three = 3
