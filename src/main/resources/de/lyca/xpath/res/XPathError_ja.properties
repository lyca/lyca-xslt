
error0000 = {0}

currentNotAllowedInMatch = current() \u95A2\u6570\u306F\u30D1\u30BF\u30FC\u30F3\u306E\u30DE\u30C3\u30C1\u30F3\u30B0\u3067\u306F\u8A31\u53EF\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002

currentTakesNoArgs = current() \u95A2\u6570\u306F\u5F15\u6570\u3092\u53D7\u3051\u5165\u308C\u307E\u305B\u3093\u3002

documentReplaced = document() \u95A2\u6570\u306E\u5B9F\u88C5\u304C de.lyca.xalan.xslt.FuncDocument \u306B\u3088\u308A\u7F6E\u304D\u63DB\u3048\u3089\u308C\u307E\u3057\u305F\u3002

contextHasNoOwnerdoc = \u30B3\u30F3\u30C6\u30AD\u30B9\u30C8\u306B\u6240\u6709\u8005\u6587\u66F8\u304C\u3042\u308A\u307E\u305B\u3093\u3002

localnameHasTooManyArgs = local-name() \u306E\u5F15\u6570\u304C\u591A\u3059\u304E\u307E\u3059\u3002

namespaceuriHasTooManyArgs = namespace-uri() \u306E\u5F15\u6570\u304C\u591A\u3059\u304E\u307E\u3059\u3002

normalizespaceHasTooManyArgs = normalize-space() \u306E\u5F15\u6570\u304C\u591A\u3059\u304E\u307E\u3059\u3002

numberHasTooManyArgs = number() \u306E\u5F15\u6570\u304C\u591A\u3059\u304E\u307E\u3059\u3002

nameHasTooManyArgs = name() \u306E\u5F15\u6570\u304C\u591A\u3059\u304E\u307E\u3059\u3002

stringHasTooManyArgs = string() \u306E\u5F15\u6570\u304C\u591A\u3059\u304E\u307E\u3059\u3002

stringlengthHasTooManyArgs = string-length() \u306E\u5F15\u6570\u304C\u591A\u3059\u304E\u307E\u3059\u3002

translateTakes3Args = translate() \u95A2\u6570\u306F 3 \u500B\u306E\u5F15\u6570\u3092\u4F7F\u7528\u3057\u307E\u3059\u3002

unparsedentityuriTakes1Arg = unparsed-entity-uri \u95A2\u6570\u306F\u5F15\u6570\u3092 1 \u500B\u4F7F\u7528\u3057\u307E\u3059\u3002

namespaceaxisNotImplemented = namespace axis \u304C\u307E\u3060\u5B9F\u88C5\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002

unknownAxis = \u4E0D\u660E\u306A\u8EF8\: {0}

unknownMatchOperation = \u4E0D\u660E\u306E\u30DE\u30C3\u30C1\u30F3\u30B0\u64CD\u4F5C\u3002

incorrectArgLength = processing-instruction() \u306E\u30CE\u30FC\u30C9\u30FB\u30C6\u30B9\u30C8\u306E\u5F15\u6570\u306E\u9577\u3055\u304C\u8AA4\u3063\u3066\u3044\u307E\u3059\u3002

cantConvertToNumber = {0} \u3092\u6570\u306B\u5909\u63DB\u3067\u304D\u307E\u305B\u3093

cantConvertToNodelist = {0} \u3092 NodeList \u306B\u5909\u63DB\u3067\u304D\u307E\u305B\u3093\u3002

cantConvertToMutablenodelist = {0} \u3092 NodeSetDTM \u306B\u5909\u63DB\u3067\u304D\u307E\u305B\u3093\u3002

cantConvertToType = {0} \u3092 type\#{1} \u306B\u5909\u63DB\u3067\u304D\u307E\u305B\u3093

expectedMatchPattern = getMatchScore \u3067\u5FC5\u8981\u306A\u4E00\u81F4\u30D1\u30BF\u30FC\u30F3\u3067\u3059\u3002

couldnotGetVarNamed = {0} \u3068\u3044\u3046\u540D\u524D\u306E\u5909\u6570\u3092\u53D6\u5F97\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F

unknownOpcode = \u30A8\u30E9\u30FC\:  \u4E0D\u660E\u306A\u547D\u4EE4\u30B3\u30FC\u30C9\: {0}

extraIllegalTokens = \u4F59\u5206\u306E\u6B63\u3057\u304F\u306A\u3044\u30C8\u30FC\u30AF\u30F3\: {0}

expectedDoubleQuote = \u5F15\u7528\u7B26\u304C\u8AA4\u3063\u3066\u3044\u308B\u30EA\u30C6\u30E9\u30EB... \u4E8C\u91CD\u5F15\u7528\u7B26\u304C\u5FC5\u8981\u3067\u3057\u305F\u3002

expectedSingleQuote = \u5F15\u7528\u7B26\u304C\u8AA4\u3063\u3066\u3044\u308B\u30EA\u30C6\u30E9\u30EB... \u5358\u4E00\u5F15\u7528\u7B26\u304C\u5FC5\u8981\u3067\u3057\u305F\u3002

emptyExpression = \u7A7A\u306E\u5F0F\u3067\u3059\u3002

expectedButFound = {0} \u304C\u5FC5\u8981\u3067\u3057\u305F\u304C\u3001{1} \u304C\u898B\u3064\u304B\u308A\u307E\u3057\u305F

incorrectProgrammerAssertion = \u30D7\u30ED\u30B0\u30E9\u30DE\u30FC\u306E\u30A2\u30B5\u30FC\u30B7\u30E7\u30F3\u304C\u8AA4\u3063\u3066\u3044\u307E\u3059\u3002 - {0}

booleanArgNoLongerOptional = \u30D6\u30FC\u30EB(...) \u5F15\u6570\u306F 19990709 XPath \u30C9\u30E9\u30D5\u30C8\u3067\u306F\u3082\u3046\u30AA\u30D7\u30B7\u30E7\u30F3\u3067\u3042\u308A\u307E\u305B\u3093\u3002

foundCommaButNoPrecedingArg = ',' \u304C\u898B\u3064\u304B\u308A\u307E\u3057\u305F\u304C\u3001\u5148\u7ACB\u3064\u5F15\u6570\u304C\u3042\u308A\u307E\u305B\u3093\u3002

foundCommaButNoFollowingArg = ',' \u304C\u898B\u3064\u304B\u308A\u307E\u3057\u305F\u304C\u3001\u5F8C\u7D9A\u306E\u5F15\u6570\u304C\u3042\u308A\u307E\u305B\u3093\u3002

predicateIllegalSyntax = '..[predicate]' \u307E\u305F\u306F '.[predicate]' \u306F\u6B63\u3057\u304F\u306A\u3044\u69CB\u6587\u3067\u3059\u3002\u4EE3\u308A\u306B  'self\:\:node()[predicate]' \u3092\u4F7F\u7528\u3057\u3066\u304F\u3060\u3055\u3044\u3002

illegalAxisName = \u6B63\u3057\u304F\u306A\u3044\u8EF8\u306E\u540D\u524D\: {0}

unknownNodetype = \u4E0D\u660E\u306A\u30CE\u30FC\u30C9\u578B\: {0}

patternLiteralNeedsBeQuoted = \u30D1\u30BF\u30FC\u30F3\u30FB\u30EA\u30C6\u30E9\u30EB ({0}) \u306B\u306F\u5F15\u7528\u7B26\u304C\u5FC5\u8981\u3067\u3059\u3002

couldnotBeFormattedToNumber = {0} \u3092\u6570\u306B\u30D5\u30A9\u30FC\u30DE\u30C3\u30C8\u8A2D\u5B9A\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002

couldnotCreateXmlprocessorliaison = XML TransformerFactory Liaison \u3092\u4F5C\u6210\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\: {0}

didnotFindXpathSelectExp = \u30A8\u30E9\u30FC\:  xpath select \u5F0F (-select) \u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3067\u3057\u305F\u3002

couldnotFindEndopAfterOplocationpath = \u30A8\u30E9\u30FC\:  OP_LOCATIONPATH \u306E\u5F8C\u306B ENDOP \u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3067\u3057\u305F

errorOccured = \u30A8\u30E9\u30FC\u304C\u8D77\u3053\u308A\u307E\u3057\u305F\u3002

illegalVariableReference = \u5909\u6570\u306B\u6307\u5B9A\u3055\u308C\u305F VariableReference \u304C\u30B3\u30F3\u30C6\u30AD\u30B9\u30C8\u5916\u304B\u3001\u5B9A\u7FA9\u304C\u3042\u308A\u307E\u305B\u3093 \u540D\u524D \= {0}

axesNotAllowed = \u30DE\u30C3\u30C1\u30F3\u30B0\u30FB\u30D1\u30BF\u30FC\u30F3\u3067\u8A31\u53EF\u3055\u308C\u3066\u3044\u308B\u306E\u306F child\:\: \u8EF8\u304A\u3088\u3073 attribute\:\: \u8EF8\u306E\u307F\u3067\u3059\u3002 \u554F\u984C\u306E\u8EF8 \= {0}

keyHasTooManyArgs = key() \u306E\u5F15\u6570\u306E\u6570\u304C\u8AA4\u3063\u3066\u3044\u307E\u3059\u3002

countTakes1Arg = count \u95A2\u6570\u306F\u5F15\u6570\u3092 1 \u500B\u4F7F\u7528\u3057\u307E\u3059\u3002

couldnotFindFunction = \u95A2\u6570\: {0} \u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3067\u3057\u305F

unsupportedEncoding = \u30B5\u30DD\u30FC\u30C8\u3055\u308C\u306A\u3044\u30A8\u30F3\u30B3\u30FC\u30C9\: {0}

problemInDtmNextsibling = \u554F\u984C\u304C getNextSibling \u5185\u306E DTM \u3067\u8D77\u3053\u308A\u307E\u3057\u305F... \u30EA\u30AB\u30D0\u30EA\u30FC\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307E\u3059

cannotWriteToEmptynodelistimpl = \u30D7\u30ED\u30B0\u30E9\u30DE\u30FC\u30FB\u30A8\u30E9\u30FC\: EmptyNodeList \u3092\u66F8\u304D\u8FBC\u307F\u5148\u306B\u306F\u3067\u304D\u307E\u305B\u3093\u3002

setdomfactoryNotSupported = setDOMFactory \u306F XPathContext \u306B\u3088\u308A\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u307E\u305B\u3093\u3002

prefixMustResolve = \u63A5\u982D\u90E8\u306F\u540D\u524D\u7A7A\u9593\u306B\u89E3\u6C7A\u3055\u308C\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\: {0}

parseNotSupported = parse (InputSource \u30BD\u30FC\u30B9) \u306F XPathContext \u5185\u3067\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u307E\u305B\u3093\u3002 {0} \u3092\u30AA\u30FC\u30D7\u30F3\u3067\u304D\u307E\u305B\u3093

saxApiNotHandled = SAX API characters(char ch[]... \u306F DTM \u306B\u3088\u308A\u51E6\u7406\u3055\u308C\u307E\u305B\u3093\u3002

ignorableWhitespaceNotHandled = ignorableWhitespace(char ch[]... \u306F DTM \u306B\u3088\u308A\u51E6\u7406\u3055\u308C\u307E\u305B\u3093\u3002

dtmCannotHandleNodes = DTMLiaison \u306F\u578B {0} \u306E\u30CE\u30FC\u30C9\u3092\u51E6\u7406\u3067\u304D\u307E\u305B\u3093

xercesCannotHandleNodes = DOM2Helper \u306F\u578B {0} \u306E\u30CE\u30FC\u30C9\u3092\u51E6\u7406\u3067\u304D\u307E\u305B\u3093

xercesParseErrorDetails = DOM2Helper.parse \u30A8\u30E9\u30FC\: SystemID - {0} \u884C - {1}

xercesParseError = DOM2Helper.parse \u30A8\u30E9\u30FC

invalidUtf16Surrogate = \u7121\u52B9\u306A UTF-16 \u30B5\u30ED\u30B2\u30FC\u30C8\u304C\u691C\u51FA\u3055\u308C\u307E\u3057\u305F\: {0} ?

oierror = \u5165\u51FA\u529B\u30A8\u30E9\u30FC

cannotCreateUrl = {0} \u306E URL \u3092\u4F5C\u6210\u3067\u304D\u307E\u305B\u3093\u3002

xpathReadobject = XPath.readObject \u5185\: {0}

functionTokenNotFound = \u95A2\u6570\u30C8\u30FC\u30AF\u30F3\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3002

cannotDealXpathType = XPath \u578B\: {0} \u3092\u51E6\u7406\u3067\u304D\u307E\u305B\u3093

nodesetNotMutable = \u3053\u306E NodeSet \u306F\u53EF\u5909\u3067\u3042\u308A\u307E\u305B\u3093

nodesetdtmNotMutable = \u3053\u306E NodeSetDTM \u306F\u53EF\u5909\u3067\u3042\u308A\u307E\u305B\u3093

varNotResolvable = \u5909\u6570\u306F\u89E3\u6C7A\u53EF\u80FD\u3067\u3042\u308A\u307E\u305B\u3093\: {0}

nullErrorHandler = \u30CC\u30EB\u306E\u30A8\u30E9\u30FC\u30FB\u30CF\u30F3\u30C9\u30E9\u30FC

progAssertUnknownOpcode = \u30D7\u30ED\u30B0\u30E9\u30DE\u30FC\u306E\u30A2\u30B5\u30FC\u30B7\u30E7\u30F3\: \u4E0D\u660E\u306A\u547D\u4EE4\u30B3\u30FC\u30C9\: {0}

zeroOrOne = 0 \u307E\u305F\u306F 1

rtfNotSupportedXrtreefragselectwrapper = rtf() \u306F XRTreeFragSelectWrapper \u3067\u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u307E\u305B\u3093

asnodeiteratorNotSupportedXrtreefragselectwrapper = asNodeIterator() \u306F XRTreeFragSelectWrapper \u3067\u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u307E\u305B\u3093

detachNotSupportedXrtreefragselectwrapper = detach() \u306F XRTreeFragSelectWrapper \u3067\u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u307E\u305B\u3093

# num() not supported by XRTreeFragSelectWrapper
numNotSupportedXrtreefragselectwrapper = num() \u306F XRTreeFragSelectWrapper \u3067\u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u307E\u305B\u3093

# xstr() not supported by XRTreeFragSelectWrapper
xstrNotSupportedXrtreefragselectwrapper = xstr() \u306F XRTreeFragSelectWrapper \u3067\u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u307E\u305B\u3093

# str() not supported by XRTreeFragSelectWrapper
strNotSupportedXrtreefragselectwrapper = str() \u306F XRTreeFragSelectWrapper \u3067\u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u307E\u305B\u3093

fsbNotSupportedXstringforchars = fsb() \u306F XStringForChars \u306E\u5834\u5408\u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u307E\u305B\u3093

couldNotFindVar = \u540D\u524D\u304C {0} \u306E\u5909\u6570\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3067\u3057\u305F

xstringforcharsCannotTakeString = XStringForChars \u306F\u5F15\u6570\u306B\u30B9\u30C8\u30EA\u30F3\u30B0\u3092\u4F7F\u7528\u3057\u307E\u305B\u3093

faststringbufferCannotBeNull = FastStringBuffer \u5F15\u6570\u306F\u30CC\u30EB\u306B\u3067\u304D\u307E\u305B\u3093

twoOrThree = 2 \u307E\u305F\u306F 3

variableAccessedBeforeBind = \u5909\u6570\u304C\u30D0\u30A4\u30F3\u30C9\u3055\u308C\u308B\u524D\u306B\u30A2\u30AF\u30BB\u30B9\u3055\u308C\u307E\u3057\u305F\u3002

fsbCannotTakeString = XStringForFSB \u306F\u5F15\u6570\u306B\u30B9\u30C8\u30EA\u30F3\u30B0\u3092\u4F7F\u7528\u3057\u307E\u305B\u3093\u3002

settingWalkerRootToNull = \n \u30A8\u30E9\u30FC\: \u30A6\u30A9\u30FC\u30AB\u30FC\u306E\u30EB\u30FC\u30C8\u3092\u30CC\u30EB\u306B\u8A2D\u5B9A\u3057\u3066\u3044\u307E\u3059\u3002

nodesetdtmCannotIterate = \u3053\u306E NodeSetDTM \u306F\u76F4\u524D\u306E\u30CE\u30FC\u30C9\u3092\u7E70\u308A\u8FD4\u3059\u3053\u3068\u304C\u3067\u304D\u307E\u305B\u3093\u3002

nodesetCannotIterate = \u3053\u306E NodeSet \u306F\u76F4\u524D\u306E\u30CE\u30FC\u30C9\u3092\u7E70\u308A\u8FD4\u3059\u3053\u3068\u304C\u3067\u304D\u307E\u305B\u3093\u3002

nodesetdtmCannotIndex = \u3053\u306E NodeSetDTM \u306F\u7D22\u5F15\u4ED8\u3051\u3084\u30AB\u30A6\u30F3\u30C8\u306E\u6A5F\u80FD\u3092\u5B9F\u884C\u3067\u304D\u307E\u305B\u3093\u3002

nodesetCannotIndex = \u3053\u306E NodeSet \u306F\u7D22\u5F15\u4ED8\u3051\u3084\u30AB\u30A6\u30F3\u30C8\u306E\u6A5F\u80FD\u3092\u5B9F\u884C\u3067\u304D\u307E\u305B\u3093\u3002

cannotCallSetshouldcachenode = nextNode \u3092\u547C\u3073\u51FA\u3057\u305F\u5F8C\u306B setShouldCacheNodes \u3092\u547C\u3073\u51FA\u3059\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002

onlyAllows = {0} \u306B\u8A31\u53EF\u3055\u308C\u308B\u5F15\u6570\u306F {1} \u500B\u306E\u307F\u3067\u3059

unknownStep = getNextStepPos \u5185\u306E\u30D7\u30ED\u30B0\u30E9\u30DE\u30FC\u306E\u30A2\u30B5\u30FC\u30B7\u30E7\u30F3\: \u4E0D\u660E\u306A stepType\: {0}

# Note to translators: A relative location path is a form of XPath expression.
# The message indicates that such an expression was expected following the
# characters '/' or '//', but was not found.
expectedRelLocPath = \u76F8\u5BFE\u30ED\u30B1\u30FC\u30B7\u30E7\u30F3\u30FB\u30D1\u30B9\u306F '/' \u307E\u305F\u306F '//' \u30C8\u30FC\u30AF\u30F3\u306E\u6B21\u306B\u5FC5\u8981\u3067\u3057\u305F\u3002

# Note to translators: A location path is a form of XPath expression.
# The message indicates that syntactically such an expression was expected,but
# the characters specified by the substitution text were encountered instead.
expectedLocPath = \u30ED\u30B1\u30FC\u30B7\u30E7\u30F3\u30FB\u30D1\u30B9\u304C\u5FC5\u8981\u3067\u3057\u305F\u304C\u3001\u6B21\u306E\u30C8\u30FC\u30AF\u30F3\u304C\u691C\u51FA\u3055\u308C\u307E\u3057\u305F\:  {0}

# Note to translators: A location path is a form of XPath expression.
# The message indicates that syntactically such a subexpression was expected,
# but no more characters were found in the expression.
expectedLocPathAtEndExpr = \u30ED\u30B1\u30FC\u30B7\u30E7\u30F3\u30FB\u30D1\u30B9\u304C\u5FC5\u8981\u3067\u3057\u305F\u304C\u3001\u4EE3\u308F\u308A\u306B XPath \u5F0F\u306E\u7D42\u308F\u308A\u304C\u691C\u51FA\u3055\u308C\u307E\u3057\u305F\u3002

# Note to translators: A location step is part of an XPath expression.
# The message indicates that syntactically such an expression was expected
# following the specified characters.
expectedLocStep = \u30ED\u30B1\u30FC\u30B7\u30E7\u30F3\u30FB\u30B9\u30C6\u30C3\u30D7\u306F '/' \u307E\u305F\u306F '//' \u30C8\u30FC\u30AF\u30F3\u306E\u6B21\u306B\u5FC5\u8981\u3067\u3057\u305F\u3002

# Note to translators: A node test is part of an XPath expression that is
# used to test for particular kinds of nodes. In this case, a node test that
# consists of an NCName followed by a colon and an asterisk or that consists
# of a QName was expected, but was not found.
expectedNodeTest = NCName\:* \u307E\u305F\u306F QName \u306E\u3044\u305A\u308C\u304B\u3068\u4E00\u81F4\u3059\u308B\u30CE\u30FC\u30C9\u30FB\u30C6\u30B9\u30C8\u304C\u5FC5\u8981\u3067\u3057\u305F\u3002

# Note to translators: A step pattern is part of an XPath expression.
# The message indicates that syntactically such an expression was expected,
# but the specified character was found in the expression instead.
expectedStepPattern = \u30B9\u30C6\u30C3\u30D7\u30FB\u30D1\u30BF\u30FC\u30F3\u304C\u5FC5\u8981\u3067\u3057\u305F\u304C\u3001'/' \u304C\u691C\u51FA\u3055\u308C\u307E\u3057\u305F\u3002

# Note to translators: A relative path pattern is part of an XPath expression.
# The message indicates that syntactically such an expression was expected,
# but was not found.
expectedRelPathPattern = \u76F8\u5BFE\u30D1\u30B9\u30FB\u30D1\u30BF\u30FC\u30F3\u304C\u5FC5\u8981\u3067\u3057\u305F\u3002

# Note to translators: The substitution text is the name of a data type. The
# message indicates that a value of a particular type could not be converted
# to a value of type boolean.
cantConvertToBoolean = XPath \u5F0F ''{0}'' \u306E XPathResult \u306E XPathResultType \u306F {1} \u3067\u3001\u3053\u308C\u3092\u30D6\u30FC\u30EB\u306B\u5909\u63DB\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002

# Note to translators: Do not translate ANY_UNORDERED_NODE_TYPE and
# FIRST_ORDERED_NODE_TYPE.
cantConvertToSinglenode = XPath \u5F0F ''{0}'' \u306E XPathResult \u306E XPathResultType \u306F {1} \u3067\u3001\u3053\u308C\u3092\u5358\u4E00\u30CE\u30FC\u30C9\u306B\u5909\u63DB\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002\u30E1\u30BD\u30C3\u30C9 getSingleNodeValue \u304C\u9069\u7528\u3055\u308C\u308B\u306E\u306F\u3001\u578B ANY_UNORDERED_NODE_TYPE \u304A\u3088\u3073 FIRST_ORDERED_NODE_TYPE \u306E\u307F\u3067\u3059\u3002

# Note to translators: Do not translate UNORDERED_NODE_SNAPSHOT_TYPE and
# ORDERED_NODE_SNAPSHOT_TYPE.
cantGetSnapshotLength = XPathResultType \u304C {1} \u3067\u3042\u308B\u305F\u3081\u3001\u30E1\u30BD\u30C3\u30C9 getSnapshotLength \u3092 XPath \u5F0F ''{0}'' \u306E XPathResult \u3092\u5BFE\u8C61\u306B\u547C\u3073\u51FA\u3059\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002\u3053\u306E\u30E1\u30BD\u30C3\u30C9\u304C\u9069\u7528\u3055\u308C\u308B\u306E\u306F\u3001\u578B UNORDERED_NODE_SNAPSHOT_TYPE \u304A\u3088\u3073 ORDERED_NODE_SNAPSHOT_TYPE \u306E\u307F\u3067\u3059\u3002

nonIteratorType = XPathResultType \u304C {1} \u3067\u3042\u308B\u305F\u3081\u3001\u30E1\u30BD\u30C3\u30C9 iterateNext \u3092 XPath \u5F0F ''{0}'' \u306E XPathResult \u3092\u5BFE\u8C61\u306B\u547C\u3073\u51FA\u3059\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002\u3053\u306E\u30E1\u30BD\u30C3\u30C9\u304C\u9069\u7528\u3055\u308C\u308B\u306E\u306F\u3001\u578B UNORDERED_NODE_ITERATOR_TYPE \u304A\u3088\u3073 ORDERED_NODE_ITERATOR_TYPE \u306E\u307F\u3067\u3059\u3002

# Note to translators: This message indicates that the document being operated
# upon changed, so the iterator object that was being used to traverse the
# document has now become invalid.
docMutated = \u7D50\u679C\u304C\u623B\u3055\u308C\u305F\u4EE5\u5F8C\u306B\u6587\u66F8\u304C\u5909\u66F4\u3055\u308C\u307E\u3057\u305F\u3002\u30A4\u30C6\u30EC\u30FC\u30BF\u30FC\u304C\u7121\u52B9\u3067\u3059\u3002

invalidXpathType = \u7121\u52B9\u306A XPath \u578B\u5F15\u6570\: {0}

emptyXpathResult = \u7A7A\u306E XPath \u7D50\u679C\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8

incompatibleTypes = XPath \u5F0F ''{0}'' \u306E XPathResult \u306E XPathResultType \u306F {1} \u3067\u3001\u3053\u308C\u3092\u6307\u5B9A\u3055\u308C\u305F XPathResultType {2} \u306B\u5F37\u5236\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002

nullResolver = \u63A5\u982D\u90E8\u3092\u30CC\u30EB\u63A5\u982D\u90E8\u30EA\u30BE\u30EB\u30D0\u30FC\u306B\u89E3\u6C7A\u3067\u304D\u307E\u305B\u3093\u3002

# Note to translators: The substitution text is the name of a data type. The
# message indicates that a value of a particular type could not be converted
# to a value of type string.
cantConvertToString = XPath \u5F0F ''{0}'' \u306E XPathResult \u306E XPathResultType \u306F {1} \u3067\u3001\u3053\u308C\u3092\u30B9\u30C8\u30EA\u30F3\u30B0\u306B\u5909\u63DB\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002

# Note to translators: Do not translate snapshotItem,
# UNORDERED_NODE_SNAPSHOT_TYPE and ORDERED_NODE_SNAPSHOT_TYPE.
nonSnapshotType = XPathResultType \u304C {1} \u3067\u3042\u308B\u305F\u3081\u3001\u30E1\u30BD\u30C3\u30C9 snapshotItem \u3092 XPath \u5F0F ''{0}'' \u306E XPathResult \u3092\u5BFE\u8C61\u306B\u547C\u3073\u51FA\u3059\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002\u3053\u306E\u30E1\u30BD\u30C3\u30C9\u304C\u9069\u7528\u3055\u308C\u308B\u306E\u306F\u3001\u578B UNORDERED_NODE_SNAPSHOT_TYPE \u304A\u3088\u3073 ORDERED_NODE_SNAPSHOT_TYPE \u306E\u307F\u3067\u3059\u3002

# Note to translators: XPathEvaluator is a Java interface name. An XPathEvaluator
# is created with respect to a particular XML document, and in this case the
# expression represented by this object was being evaluated with respect to a
# context node from a different document.
wrongDocument = \u30B3\u30F3\u30C6\u30AD\u30B9\u30C8\u30FB\u30CE\u30FC\u30C9\u306F\u3053\u306E XPathEvaluator \u306B\u30D0\u30A4\u30F3\u30C9\u3055\u308C\u3066\u3044\u308B\u6587\u66F8\u306B\u5C5E\u3057\u3066\u3044\u307E\u305B\u3093\u3002

# Note to translators: The XPath expression cannot be evaluated with respect to
# this type of node.
wrongNodetype = \u30B3\u30F3\u30C6\u30AD\u30B9\u30C8\u30FB\u30CE\u30FC\u30C9\u578B\u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002

xpathError = XPath \u306B\u4E0D\u660E\u306A\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002

cantConvertXpathresulttypeToNumber = XPath \u5F0F ''{0}'' \u306E XPathResult \u306E XPathResultType \u306F {1} \u3067\u3001\u3053\u308C\u3092\u6570\u5024\u306B\u5909\u63DB\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002

extensionFunctionCannotBeInvoked = XMLConstants.FEATURE_SECURE_PROCESSING \u6A5F\u80FD\u306E\u8A2D\u5B9A\u304C true \u306E\u3068\u304D\u306B\u3001\u62E1\u5F35\u95A2\u6570 ''{0}'' \u3092\u547C\u3073\u51FA\u3059\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002

resolveVariableReturnsNull = \u5909\u6570 {0} \u306E resolveVariable \u304C NULL \u3092\u623B\u3057\u3066\u3044\u307E\u3059\u3002

unsupportedReturnType = \u30B5\u30DD\u30FC\u30C8\u3055\u308C\u306A\u3044\u623B\u308A\u5024\u306E\u578B\: {0}

sourceReturnTypeCannotBeNull = Source \u307E\u305F\u306F Return Type\u3001\u3042\u308B\u3044\u306F\u305D\u306E\u4E21\u65B9\u3092\u30CC\u30EB\u306B\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002

argCannotBeNull = {0} \u5F15\u6570\u306F\u30CC\u30EB\u306B\u3067\u304D\u307E\u305B\u3093\u3002

objectModelNull = objectModel \=\= null \u3067 {0}\#isObjectModelSupported( String objectModel ) \u3092\u547C\u3073\u51FA\u3059\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002

objectModelEmpty = objectModel \=\= "" \u3067 {0}\#isObjectModelSupported( String objectModel ) \u3092\u547C\u3073\u51FA\u3059\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002

featureNameNull = \u6A5F\u80FD\u3092\u30CC\u30EB\u540D\u3067\u8A2D\u5B9A\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307E\u3059\: {0}\#setFeature( null, {1})

featureUnknown = \u4E0D\u660E\u306A\u6A5F\u80FD "{0}" \u3092\u8A2D\u5B9A\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307E\u3059\: {1}\#setFeature({0},{2})

gettingNullFeature = \u6A5F\u80FD\u3092\u30CC\u30EB\u540D\u3067\u691C\u7D22\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307E\u3059\: {0}\#getFeature(null)

gettingUnknownFeature = \u4E0D\u660E\u306A\u6A5F\u80FD "{0}" \u3092\u691C\u7D22\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307E\u3059\: {1}\#getFeature({0})

nullXpathFunctionResolver = XPathFunctionResolver \u3092\u30CC\u30EB\u3067\u8A2D\u5B9A\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307E\u3059\: {0}\#setXPathFunctionResolver(null)

nullXpathVariableResolver = XPathVariableResolver \u3092\u30CC\u30EB\u3067\u8A2D\u5B9A\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307E\u3059\: {0}\#setXPathVariableResolver(null)

localeNameNotHandled = \u30D5\u30A9\u30FC\u30DE\u30C3\u30C8\u756A\u53F7\u95A2\u6570\u5185\u306E\u30ED\u30B1\u30FC\u30EB\u540D\u306F\u307E\u3060\u51E6\u7406\u3055\u308C\u307E\u305B\u3093\u3002

propertyNotSupported = XSL \u30D7\u30ED\u30D1\u30C6\u30A3\u30FC\: {0} \u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u307E\u305B\u3093

dontDoAnythingWithNs = \u73FE\u5728\u3001\u30D7\u30ED\u30D1\u30C6\u30A3\u30FC {1} \u306E\u540D\u524D\u7A7A\u9593 {0} \u3067\u4F55\u3082\u5B9F\u884C\u3055\u308C\u3066\u3044\u307E\u305B\u3093

securityException = XSL \u30B7\u30B9\u30C6\u30E0\u30FB\u30D7\u30ED\u30D1\u30C6\u30A3\u30FC\: {0} \u306B\u30A2\u30AF\u30BB\u30B9\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308B\u3068\u304D\u306B SecurityException

quoNoLongerDefined = \u65E7\u69CB\u6587\: quo(...) \u306F XPath \u5185\u306B\u3082\u3046\u5B9A\u7FA9\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002

needDerivedObjectToImplementNodetest = nodeTest \u3092\u5B9F\u88C5\u3059\u308B\u306B\u306F XPath \u306B\u6D3E\u751F\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304C\u5FC5\u8981\u3067\u3059\u3002

functionTokenNotFound = \u95A2\u6570\u30C8\u30FC\u30AF\u30F3\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3002

couldnotFindFunction = \u95A2\u6570\: {0} \u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3067\u3057\u305F

cannotMakeUrlFrom = URL \u3092 {0} \u304B\u3089\u4F5C\u6210\u3067\u304D\u307E\u305B\u3093\u3002

expandEntitiesNotSupported = -E \u30AA\u30D7\u30B7\u30E7\u30F3\u306F DTM \u30D1\u30FC\u30B5\u30FC\u306E\u5834\u5408\u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u307E\u305B\u3093

illegalVariableReference = \u5909\u6570\u306B\u6307\u5B9A\u3055\u308C\u305F VariableReference \u304C\u30B3\u30F3\u30C6\u30AD\u30B9\u30C8\u5916\u304B\u3001\u5B9A\u7FA9\u304C\u3042\u308A\u307E\u305B\u3093\u3002\u540D\u524D \= {0}

unsupportedEncoding = \u30B5\u30DD\u30FC\u30C8\u3055\u308C\u306A\u3044\u30A8\u30F3\u30B3\u30FC\u30C9\: {0}

uiLanguage = en

helpLanguage = en

language = en

formatFailed = messageFormat \u547C\u3073\u51FA\u3057\u4E2D\u306B\u4F8B\u5916\u304C\u30B9\u30ED\u30FC\u3055\u308C\u307E\u3057\u305F\u3002

version = >>>>>>> Xalan \u30D0\u30FC\u30B8\u30E7\u30F3 

version2 = <<<<<<<

yes = \u306F\u3044 (y)

line = \u884C \#

column = \u6841 \#

xsldone = XSLProcessor\: \u5B8C\u4E86

xpathOption = xpath \u30AA\u30D7\u30B7\u30E7\u30F3\: 

optionin = \   [-in inputXMLURL]

optionselect = \   [-select xpath \u5F0F]

optionmatch = \   [-match \u30DE\u30C3\u30C1\u30F3\u30B0\u30FB\u30D1\u30BF\u30FC\u30F3 (\u30DE\u30C3\u30C1\u30F3\u30B0\u8A3A\u65AD\u7528)]

optionanyexpr = \u3042\u308B\u3044\u306F\u8A3A\u65AD\u30C0\u30F3\u30D7\u3092\u5B9F\u884C\u3059\u308B\u306E\u306F xpath \u5F0F\u3060\u3051\u3067\u3059

noparsermsg1 = XSL \u51E6\u7406\u306F\u6210\u529F\u3057\u307E\u305B\u3093\u3067\u3057\u305F\u3002

noparsermsg2 = ** \u30D1\u30FC\u30B5\u30FC\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3067\u3057\u305F **

noparsermsg3 = \u30AF\u30E9\u30B9\u30D1\u30B9\u3092\u8ABF\u3079\u3066\u304F\u3060\u3055\u3044\u3002

noparsermsg4 = IBM \u306E XML Parser for Java \u304C\u306A\u3044\u5834\u5408\u306F\u3001\u6B21\u306E\u30B5\u30A4\u30C8\u304B\u3089\u30C0\u30A6\u30F3\u30ED\u30FC\u30C9\u3067\u304D\u307E\u3059\:

noparsermsg5 = IBM AlphaWorks\: http\://www.alphaworks.ibm.com/formula/xml

gtone = >1

zero = 0

one = 1

two = 2

three = 3
